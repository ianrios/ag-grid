{"version":3,"sources":["indexApiTest.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAE9C,OAAO,EAAE,wBAAwB,EAAE,MAAM,0CAA0C,CAAC;AAEpF,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,OAAO,uCAAuC,CAAC;AAC/C,OAAO,+CAA+C,CAAC;AAQvD,MAAM,GAAG,GAAG,GAAG,EAAE;IACb,MAAM,OAAO,GAAG,MAAM,CAAuB,IAAI,CAAC,CAAC;IAEnD,MAAM,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC;QACvB,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;QACjD,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;QAC/C,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE;KACtD,CAAC,CAAC;IACH,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAoB;QACtD,EAAE,KAAK,EAAE,MAAM,EAAE;QACjB,EAAE,KAAK,EAAE,OAAO,EAAE;QAClB,EAAE,KAAK,EAAE,OAAO,EAAE;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;;QACX,OAAO,CAAC,GAAG,CAAC,MAAA,OAAO,CAAC,OAAO,0CAAE,GAAG,CAAC,aAAa,CAAC,SAAS,EAAE,CAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAE,CAAC,CAAC,CAAC;IACtH,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,OAAO,CACH,6BAAK,SAAS,EAAC,iBAAiB,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAC;QAC7D,oBAAC,WAAW,IACR,GAAG,EAAG,OAAO,EACb,OAAO,EAAG,OAAO,EACjB,UAAU,EAAE,OAAO,EACnB,OAAO,EAAE,CAAC,wBAAwB,CAAC,GAAI,CACzC,CACT,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAE,CAAC,CAAC;AAC1D,IAAI,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAG,CAAC,CAAC","file":"indexApiTest.mjs","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { ColDef } from '@ag-grid-community/core';\nimport { AgGridReact } from './agGridReact';\n\nimport '@ag-grid-community/styles/ag-grid.css';\nimport '@ag-grid-community/styles/ag-theme-quartz.css';\n\ninterface RowData {\n    make: string;\n    model: string;\n    price: number;\n}\n\nconst App = () => {\n    const gridRef = useRef<AgGridReact<RowData>>(null);\n\n    const [rowData] = useState([\n        { make: 'Toyota', model: 'Celica', price: 35000 },\n        { make: 'Ford', model: 'Mondeo', price: 32000 },\n        { make: 'Porsche', model: 'Boxster', price: 72000 }\n    ]);\n    const [colDefs, setColDefs] = useState<ColDef<RowData>[]>([\n        { field: 'make' },\n        { field: 'model' },\n        { field: 'price' },\n    ]);\n\n    useEffect(() => {\n        console.log(gridRef.current?.api.setGridOption('rowData', [ { make: 'Toyota', model: 'Celica', price: 35000 } ]));\n    }, [])\n\n    return (\n        <div className=\"ag-theme-quartz\" style={{height: 400, width: 600}}>\n            <AgGridReact\n                ref={ gridRef }\n                rowData={ rowData }\n                columnDefs={colDefs}\n                modules={[ClientSideRowModelModule]} />\n        </div>\n    );\n};\n\nconst root = createRoot(document.getElementById('root')!);\nroot.render(<App />);\n"]}