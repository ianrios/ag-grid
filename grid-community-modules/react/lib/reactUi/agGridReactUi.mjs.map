{"version":3,"sources":["reactUi/agGridReactUi.tsx"],"names":[],"mappings":"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","file":"agGridReactUi.mjs","sourcesContent":["import {\n    BaseComponentWrapper, ColumnApi, ComponentType,\n    ComponentUtil,\n    Context, CtrlsService, FrameworkComponentWrapper,\n    GridApi,\n    GridCoreCreator,\n    GridParams,\n    WrappableInterface,\n    _\n} from '@ag-grid-community/core';\nimport React, {\n    useCallback, useEffect, useMemo,\n    useRef,\n    useState\n} from 'react';\nimport { AgReactUiProps } from '../shared/interfaces';\nimport { NewReactComponent } from '../shared/newReactComponent';\nimport { PortalManager } from '../shared/portalManager';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides';\nimport GridComp from './gridComp';\n\n\nexport const AgGridReactUi = <TData,>(props: AgReactUiProps<TData>) => {\n    const apiRef = useRef<GridApi<TData>>();\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const portalManager = useRef<PortalManager | null>(null);\n    const destroyFuncs = useRef<(() => void)[]>([]);\n    const whenReadyFuncs = useRef<(() => void)[]>([]);\n    const prevProps = useRef<AgReactUiProps<any>>(props);\n\n    const ready = useRef<boolean>(false);\n\n    const [context, setContext] = useState<Context | undefined>(undefined);\n\n    // Hook to enable Portals to be displayed via the PortalManager\n    const [, setPortalRefresher] = useState(0);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current) {\n\n            destroyFuncs.current.forEach((f) => f());\n            destroyFuncs.current.length = 0;\n\n            return;\n        }\n\n        const modules = props.modules || [];\n\n        if (!portalManager.current) {\n            portalManager.current = new PortalManager(\n                () => setPortalRefresher((prev) => prev + 1),\n                props.componentWrappingElement,\n                props.maxComponentCreationTimeMs\n            );\n            destroyFuncs.current.push(() => {\n                portalManager.current?.destroy();\n                portalManager.current = null;\n            });\n        }\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(portalManager.current),\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(),\n        };\n\n        const mergedGridOps = ComponentUtil.combineAttributesAndGridOptions(props.gridOptions, props);\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n\n            destroyFuncs.current.push(() => {\n                context.destroy();\n            });\n\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n\n                if (context.isDestroyed()) {\n                    return;\n                }\n\n                const api = apiRef.current;\n                if (api) {\n                    if (props.setGridApi) {\n                        props.setGridApi(api, new ColumnApi(api));\n                    }\n                }\n            });\n        };\n\n        // this callback adds to ctrlsService.whenReady(), just like above, however because whenReady() executes\n        // funcs in the order they were received, we know adding items here will be AFTER the grid has set columns\n        // and data. this is because GridCoreCreator sets these between calling createUiCallback and acceptChangesCallback\n        const acceptChangesCallback = (context: Context) => {\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                whenReadyFuncs.current.forEach((f) => f());\n                whenReadyFuncs.current.length = 0;\n                ready.current = true;\n            });\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        apiRef.current = gridCoreCreator.create(\n            eGui.current,\n            mergedGridOps,\n            createUiCallback,\n            acceptChangesCallback,\n            gridParams\n        );\n\n    }, []);\n\n    const style = useMemo(() => {\n        return {\n            height: '100%',\n            ...(props.containerStyle || {}),\n        };\n    }, [props.containerStyle]);\n\n    const processWhenReady = useCallback((func: () => void) => {\n        if (ready.current) {\n            func();\n        } else {\n            whenReadyFuncs.current.push(func);\n        }\n    }, []);\n\n    useEffect(() => {\n        const changes = extractGridPropertyChanges(prevProps.current, props);\n        prevProps.current = props;\n        processWhenReady(() => {\n            if (apiRef.current) {\n                ComponentUtil.processOnChange(changes, apiRef.current)\n            }\n        });\n    }, [props]);\n\n    return (\n        <div style={style} className={props.className} ref={setRef}>\n            {context && !context.isDestroyed() ? <GridComp context={context} /> : null}\n            {portalManager.current?.getPortals() ?? null}\n        </div>\n    );\n};\n\nfunction extractGridPropertyChanges(prevProps: any, nextProps: any): { [p: string]: any } {\n    const changes: { [p: string]: any } = {};\n    Object.keys(nextProps).forEach(propKey => {\n        const propValue = nextProps[propKey];\n        if (prevProps[propKey] !== propValue) {\n            changes[propKey] = propValue;\n        }\n    });\n\n    return changes;\n}\n\nclass ReactFrameworkComponentWrapper\n    extends BaseComponentWrapper<WrappableInterface>\n    implements FrameworkComponentWrapper {\n    private readonly parent: PortalManager;\n\n    constructor(parent: PortalManager) {\n        super();\n        this.parent = parent;\n    }\n\n    createWrapper(UserReactComponent: { new(): any }, componentType: ComponentType): WrappableInterface {\n        return new NewReactComponent(UserReactComponent, this.parent as any, componentType);\n    }\n}\n"]}