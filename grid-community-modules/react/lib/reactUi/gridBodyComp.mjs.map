{"version":3,"sources":["reactUi/gridBodyComp.tsx"],"names":[],"mappings":"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","file":"gridBodyComp.mjs","sourcesContent":["import { CssClassManager, GridBodyCtrl, IGridBodyComp, RowContainerName, _ } from '@ag-grid-community/core';\nimport React, { memo, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from './beansContext';\nimport GridHeaderComp from './header/gridHeaderComp';\nimport useReactCommentEffect from './reactComment';\nimport RowContainerComp from './rows/rowContainerComp';\nimport { classesList } from './utils';\n\ninterface SectionProperties {\n    section: React.RefObject<HTMLDivElement>;\n    className: string;\n    style?: React.CSSProperties;\n}\n\nconst GridBodyComp = () => {\n\n    const { context, agStackComponentsRegistry, resizeObserverService } = useContext(BeansContext);\n\n    const [rowAnimationClass, setRowAnimationClass] = useState<string>('');\n    const [topHeight, setTopHeight] = useState<number>(0);\n    const [bottomHeight, setBottomHeight] = useState<number>(0);\n    const [stickyTopHeight, setStickyTopHeight] = useState<string>('0px');\n    const [stickyTopTop, setStickyTopTop] = useState<string>('0px');\n    const [stickyTopWidth, setStickyTopWidth] = useState<string>('100%');\n    const [topDisplay, setTopDisplay] = useState<string>('');\n    const [bottomDisplay, setBottomDisplay] = useState<string>('');\n\n    const [forceVerticalScrollClass, setForceVerticalScrollClass] = useState<string | null>(null);\n    const [topAndBottomOverflowY, setTopAndBottomOverflowY] = useState<string>('');\n    const [cellSelectableCss, setCellSelectableCss] = useState<string | null>(null);\n\n    // we initialise layoutClass to 'ag-layout-normal', because if we don't, the comp will initially\n    // render with no width (as ag-layout-normal sets width to 0, which is needed for flex) which\n    // gives the grid a massive width, which then renders a massive amount of columns. this problem\n    // is due to React been async, for the non-async version (ie when not using React) this is not a\n    // problem as the UI will finish initialising before we set data.\n    const [layoutClass, setLayoutClass] = useState<string>('ag-layout-normal');\n\n    let cssClassManager = useRef<CssClassManager>();\n    if(!cssClassManager.current){\n        cssClassManager.current = new CssClassManager(() => eRoot.current);\n    }\n\n    const eRoot = useRef<HTMLDivElement | null>(null);\n    const eTop = useRef<HTMLDivElement>(null);\n    const eStickyTop = useRef<HTMLDivElement>(null);\n    const eBody = useRef<HTMLDivElement>(null);\n    const eBodyViewport = useRef<HTMLDivElement>(null);\n    const eBottom = useRef<HTMLDivElement>(null);\n\n    const beansToDestroy = useRef<any[]>([]);\n    const destroyFuncs = useRef<(() => void)[]>([]);\n\n    useReactCommentEffect(' AG Grid Body ', eRoot);\n    useReactCommentEffect(' AG Pinned Top ', eTop);\n    useReactCommentEffect(' AG Sticky Top ', eStickyTop);\n    useReactCommentEffect(' AG Middle ', eBodyViewport);\n    useReactCommentEffect(' AG Pinned Bottom ', eBottom);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eRoot.current = e;\n        if (!eRoot.current) {\n            context.destroyBeans(beansToDestroy.current);\n            destroyFuncs.current.forEach(f => f());\n\n            beansToDestroy.current = [];\n            destroyFuncs.current = [];\n\n            return;\n        }\n\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            beansToDestroy.current.push(comp);\n            return comp;\n        };\n\n        const attachToDom = (eParent: HTMLElement, eChild: HTMLElement | Comment) => {\n            eParent.appendChild(eChild);\n            destroyFuncs.current.push(() => eParent.removeChild(eChild));\n        }\n\n        attachToDom(eRoot.current, document.createComment(' AG Fake Horizontal Scroll '));\n        attachToDom(eRoot.current, newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n\n        attachToDom(eRoot.current, document.createComment(' AG Overlay Wrapper '));\n        attachToDom(eRoot.current, newComp('AG-OVERLAY-WRAPPER').getGui());\n\n        if (eBody.current) {\n            attachToDom(eBody.current, document.createComment(' AG Fake Vertical Scroll '));\n            attachToDom(eBody.current, newComp('AG-FAKE-VERTICAL-SCROLL').getGui());\n        }\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: count => {\n                if(eRoot.current){\n                    _.setAriaColCount(eRoot.current, count)\n                }\n            } ,\n            setRowCount: count => {\n                if (eRoot.current) {\n                    _.setAriaRowCount(eRoot.current, count);\n                }\n            },\n            setTopHeight,\n            setBottomHeight,\n            setStickyTopHeight,\n            setStickyTopTop,\n            setStickyTopWidth,\n            setTopDisplay,\n            setBottomDisplay,\n            setColumnMovingCss: (cssClass, flag) => cssClassManager.current!.addOrRemoveCssClass(cssClass, flag),\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: (cssClass, flag) => setCellSelectableCss(flag ? cssClass : null),\n            setBodyViewportWidth: (width) => {\n                if (eBodyViewport.current) {\n                    eBodyViewport.current.style.width = width;\n                }\n            },\n            registerBodyViewportResizeListener: listener => {\n                if(eBodyViewport.current){\n                    const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport.current, listener);\n                    destroyFuncs.current.push(() => unsubscribeFromResize());\n                }\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        beansToDestroy.current.push(ctrl);\n        ctrl.setComp(\n            compProxy,\n            eRoot.current,\n            eBodyViewport.current!,\n            eTop.current!,\n            eBottom.current!,\n            eStickyTop.current!\n        );\n\n    }, []);\n\n    const rootClasses = useMemo(() =>\n        classesList('ag-root', 'ag-unselectable', layoutClass),\n        [layoutClass]\n    );\n    const bodyViewportClasses = useMemo(() =>\n        classesList('ag-body-viewport', rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss), \n        [rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss]\n    );\n    const bodyClasses = useMemo(() =>\n        classesList('ag-body', layoutClass), \n        [layoutClass]\n    );\n    const topClasses = useMemo(() =>\n        classesList('ag-floating-top', cellSelectableCss), \n        [cellSelectableCss]\n    );\n    const stickyTopClasses = useMemo(() =>\n        classesList('ag-sticky-top', cellSelectableCss), \n        [cellSelectableCss]\n    );\n    const bottomClasses = useMemo(() =>\n        classesList('ag-floating-bottom', cellSelectableCss),\n        [cellSelectableCss]\n    );\n\n    const topStyle: React.CSSProperties = useMemo(() => ({\n        height: topHeight,\n        minHeight: topHeight,\n        display: topDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [topHeight, topDisplay, topAndBottomOverflowY]);\n\n    const stickyTopStyle: React.CSSProperties = useMemo(() => ({\n        height: stickyTopHeight,\n        top: stickyTopTop,\n        width: stickyTopWidth\n    }), [stickyTopHeight, stickyTopTop, stickyTopWidth]);\n\n    const bottomStyle: React.CSSProperties = useMemo(()=> ({\n        height: bottomHeight,\n        minHeight: bottomHeight,\n        display: bottomDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [bottomHeight, bottomDisplay, topAndBottomOverflowY]);\n\n    const createRowContainer = (container: RowContainerName) => <RowContainerComp name={ container } key={`${container}-container`} />;\n    const createSection = ({\n        section,\n        children,\n        className,\n        style\n    }: SectionProperties & { children: RowContainerName[] }) => (\n        <div ref={ section } className={ className } role=\"presentation\" style={ style }>\n            { children.map(createRowContainer) }\n        </div>\n    );\n\n    return (\n        <div ref={setRef} className={rootClasses} role=\"treegrid\">\n            <GridHeaderComp/>\n            { createSection({ section: eTop, className: topClasses, style: topStyle, children: [\n                RowContainerName.TOP_LEFT,\n                RowContainerName.TOP_CENTER,\n                RowContainerName.TOP_RIGHT,\n                RowContainerName.TOP_FULL_WIDTH,\n            ]}) }\n            <div className={bodyClasses} ref={eBody} role=\"presentation\">\n                { createSection({ section: eBodyViewport, className: bodyViewportClasses, \n                    children: [\n                    RowContainerName.LEFT,\n                    RowContainerName.CENTER,\n                    RowContainerName.RIGHT,\n                    RowContainerName.FULL_WIDTH,\n                ]}) }\n            </div>\n            { createSection({ section: eStickyTop, className: stickyTopClasses, style: stickyTopStyle, children: [\n                RowContainerName.STICKY_TOP_LEFT,\n                RowContainerName.STICKY_TOP_CENTER,\n                RowContainerName.STICKY_TOP_RIGHT,\n                RowContainerName.STICKY_TOP_FULL_WIDTH,\n            ]}) }\n            { createSection({ section: eBottom, className: bottomClasses, style: bottomStyle, children: [\n                RowContainerName.BOTTOM_LEFT,\n                RowContainerName.BOTTOM_CENTER,\n                RowContainerName.BOTTOM_RIGHT,\n                RowContainerName.BOTTOM_FULL_WIDTH,\n            ]}) }\n        </div>\n    );\n};\n\nexport default memo(GridBodyComp);\n"]}