{"version":3,"sources":["reactUi/header/headerGroupCellComp.tsx"],"names":[],"mappings":"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","file":"headerGroupCellComp.mjs","sourcesContent":["import { HeaderGroupCellCtrl, IHeaderGroupCellComp, IHeaderGroupComp, UserCompDetails } from '@ag-grid-community/core';\nimport React, { memo, useCallback, useContext, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { showJsComp } from '../jsComp';\nimport { CssClasses } from '../utils';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n\n    const {context} = useContext(BeansContext);\n    const { ctrl } = props;\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [cssResizableClasses, setResizableCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [resizableAriaHidden, setResizableAriaHidden] = useState<\"true\" | \"false\">(\"false\");\n    const [ariaExpanded, setAriaExpanded] = useState<'true'|'false'|undefined>();\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n    const colId = useMemo(() => ctrl.getColId(), []);\n\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const eResize = useRef<HTMLDivElement>(null);\n    const userCompRef = useRef<IHeaderGroupComp>();\n\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current) {\n            return;\n        }\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                }\n            },\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            setResizableDisplayed: (displayed) => {\n                setResizableCssClasses(prev => prev.setClass('ag-hidden', !displayed))\n                setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setAriaExpanded: expanded => setAriaExpanded(expanded),\n            getUserCompInstance: () => userCompRef.current || undefined,\n        };\n\n        ctrl.setComp(compProxy, eGui.current, eResize.current!);\n\n    }, []);\n\n    // js comps\n    useLayoutEffect(() => showJsComp(userCompDetails, context, eGui.current!), [userCompDetails]);\n\n    // add drag handling, must be done after component is added to the dom\n    useEffect(()=> {\n        if (eGui.current) {\n            ctrl.setDragSource(eGui.current);\n        }\n    }, [userCompDetails]);\n\n    const className = useMemo( ()=> 'ag-header-group-cell ' + cssClasses.toString(), [cssClasses] );\n    const resizableClassName = useMemo( ()=> 'ag-header-cell-resize ' + cssResizableClasses.toString(), [cssResizableClasses] );\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div ref={setRef} className={className} col-id={colId} \n                    role=\"columnheader\" tabIndex={-1} aria-expanded={ariaExpanded}>\n            { reactUserComp && <UserCompClass { ...userCompDetails!.params } ref={ userCompRef } /> }\n            <div ref={eResize} aria-hidden={resizableAriaHidden} className={resizableClassName}></div>\n        </div>\n    );\n};\n\nexport default memo(HeaderGroupCellComp);"]}