{"version":3,"sources":["reactUi/jsComp.tsx"],"names":[],"mappings":";AAGA;;;GAGG;AACH,MAAM,CAAC,MAAM,UAAU,GAAG,CACtB,WAA+C,EAC/C,OAAgB,EAAE,OAAoB,EACtC,GAAgD,EACjD,EAAE;IAED,MAAM,SAAS,GAAG,CAAC,WAAW,IAAI,WAAW,CAAC,sBAAsB,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC;IAC9F,IAAI,SAAS,EAAE;QAAE,OAAO;KAAE;IAE1B,MAAM,OAAO,GAAG,WAAY,CAAC,kBAAkB,EAAE,CAAC;IAClD,IAAI,CAAC,OAAO,EAAE;QAAE,OAAO;KAAE;IAEzB,4FAA4F;IAC5F,wEAAwE;IAExE,IAAI,IAAS,CAAC;IACd,IAAI,OAAoB,CAAC;IACzB,IAAI,SAAS,GAAG,KAAK,CAAC;IAEtB,OAAO,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE;QAEd,IAAI,SAAS,EAAE;YACX,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACvB,OAAO;SACV;QAED,IAAI,GAAG,CAAC,CAAC;QACT,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACxB,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,EAAE;QACR,SAAS,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,EAAE;YAAE,OAAO;SAAE,CAAC,2DAA2D;QAElF,IAAI,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE;YAClC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC9C;QAED,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAE1B,IAAI,GAAG,EAAE;YACL,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;SAC1B;IACL,CAAC,CAAC;AACN,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,GAA2D,EAAE,KAAU,EAAE,EAAE;IACvF,IAAI,CAAC,GAAG,EAAE;QAAE,OAAO;KAAE;IAErB,IAAI,GAAG,YAAY,QAAQ,EAAE;QACzB,MAAM,WAAW,GAAG,GAAuB,CAAC;QAC5C,WAAW,CAAC,KAAK,CAAC,CAAC;KACtB;SAAM;QACH,MAAM,MAAM,GAAG,GAA4B,CAAC;QAC5C,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;KAC1B;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,WAA4B,EAAO,EAAE;IAClE,MAAM,OAAO,GAAG,WAAW,CAAC,kBAAkB,EAAE,CAAC;IACjD,IAAI,CAAC,OAAO,EAAE;QAAE,OAAO;KAAE;IACzB,OAAO,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B;AACxE,CAAC,CAAC","file":"jsComp.mjs","sourcesContent":["import { Context, UserCompDetails } from '@ag-grid-community/core';\nimport { MutableRefObject } from 'react';\n\n/**\n * Show a JS Component\n * @returns Effect Cleanup function\n */\nexport const showJsComp = (\n    compDetails: UserCompDetails | undefined | null, \n    context: Context, eParent: HTMLElement, \n    ref?: MutableRefObject<any> | ((ref: any)=>void)\n)  => {\n\n    const doNothing = !compDetails || compDetails.componentFromFramework || context.isDestroyed();\n    if (doNothing) { return; }\n\n    const promise = compDetails!.newAgStackInstance();\n    if (!promise) { return; }\n    \n    // almost all JS Comps are NOT async, however the Floating Multi Filter is Async as it could\n    // be wrapping a React filter, so we need to cater for async comps here.\n\n    let comp: any;\n    let compGui: HTMLElement;\n    let destroyed = false;\n\n    promise.then( c => {\n\n        if (destroyed) {\n            context.destroyBean(c);\n            return;\n        }\n\n        comp = c;\n        compGui = comp.getGui();\n        eParent.appendChild(compGui);\n        setRef(ref, comp);    \n    });\n\n    return () => {\n        destroyed = true;\n        if (!comp) { return; } // in case we were destroyed before async comp was returned\n\n        if (compGui && compGui.parentElement) {\n            compGui.parentElement.removeChild(compGui);\n        }\n\n        context.destroyBean(comp);\n\n        if (ref) {\n            setRef(ref, undefined);\n        }\n    };\n}\n\nconst setRef = (ref: MutableRefObject<any> | ((ref: any)=>void) | undefined, value: any) => {\n    if (!ref) { return; }\n    \n    if (ref instanceof Function) {\n        const refCallback = ref as (ref: any)=>void;\n        refCallback(value);\n    } else {\n        const refObj = ref as MutableRefObject<any>;\n        refObj.current = value;\n    }\n};\n\nexport const createSyncJsComp = (compDetails: UserCompDetails): any => {\n    const promise = compDetails.newAgStackInstance();\n    if (!promise) { return; }\n    return promise.resolveNow(null, x => x); // js comps are never async\n};\n"]}