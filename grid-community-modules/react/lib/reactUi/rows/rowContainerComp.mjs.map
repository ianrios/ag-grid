{"version":3,"sources":["reactUi/rows/rowContainerComp.tsx"],"names":[],"mappings":"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","file":"rowContainerComp.mjs","sourcesContent":["import { getRowContainerTypeForName, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport React, { useMemo, useRef, useState, memo, useContext, useCallback } from 'react';\nimport { agFlushSync, classesList, getNextValueIfDifferent } from '../utils';\nimport useReactCommentEffect from '../reactComment';\nimport RowComp from './rowComp';\nimport { BeansContext } from '../beansContext';\n\nconst RowContainerComp = (params: {name: RowContainerName}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const { name } = params;\n    const containerType = useMemo(() => getRowContainerTypeForName(name), [name]);\n\n    const eViewport = useRef<HTMLDivElement | null>(null);\n    const eContainer = useRef<HTMLDivElement | null>(null);\n\n    const rowCtrlsRef = useRef<RowCtrl[]>([]);\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = useState<RowCtrl[]>(() => []);\n    const domOrderRef = useRef<boolean>(false);\n    const rowContainerCtrlRef = useRef<RowContainerCtrl | null>();\n\n    const cssClasses = useMemo(() => RowContainerCtrl.getRowContainerCssClasses(name), [name]);\n    const viewportClasses = useMemo( ()=> classesList(cssClasses.viewport), [cssClasses]);\n    const containerClasses = useMemo( ()=> classesList(cssClasses.container), [cssClasses]);\n\n    // no need to useMemo for boolean types\n    const centerTemplate = name === RowContainerName.CENTER\n        || name === RowContainerName.TOP_CENTER\n        || name === RowContainerName.BOTTOM_CENTER\n        || name === RowContainerName.STICKY_TOP_CENTER;\n\n    const topLevelRef = centerTemplate ? eViewport : eContainer;\n\n    useReactCommentEffect(' AG Row Container ' + name + ' ', topLevelRef);\n\n    const areElementsReady = useCallback(() => {\n        if (centerTemplate) {\n            return eViewport.current != null && eContainer.current != null;\n        }\n        return eContainer.current != null;\n    }, []);\n\n    const areElementsRemoved = useCallback(() => {\n        if (centerTemplate) {\n            return eViewport.current == null && eContainer.current == null;\n        }\n        return eContainer.current == null;\n    }, []);\n\n    const setRef = useCallback(() => {\n        if (areElementsRemoved()) {\n            context.destroyBean(rowContainerCtrlRef.current);\n            rowContainerCtrlRef.current = null;\n        }\n        if (areElementsReady()) {\n\n            const updateRowCtrlsOrdered = (useFlushSync: boolean) => {\n                agFlushSync(useFlushSync, () => {\n                    setRowCtrlsOrdered(prev => getNextValueIfDifferent(prev, rowCtrlsRef.current, domOrderRef.current)!);\n                });\n            }\n\n            const compProxy: IRowContainerComp = {\n                setViewportHeight: (height: string) => {\n                    if (eViewport.current) {\n                        eViewport.current.style.height = height;\n                    }\n                },\n                setRowCtrls: (rowCtrls, useFlushSync) => {\n                    const useFlush = useFlushSync && rowCtrlsRef.current.length > 0 && rowCtrls.length > 0;\n                    // Keep a record of the rowCtrls in case we need to reset the Dom order.\n                    rowCtrlsRef.current = rowCtrls;\n                    updateRowCtrlsOrdered(useFlush);\n                },\n                setDomOrder: domOrder => {\n                    if (domOrderRef.current != domOrder) {\n                        domOrderRef.current = domOrder;\n                        updateRowCtrlsOrdered(false);\n                    }\n                },\n                setContainerWidth: width => {\n                    if (eContainer.current) {\n                        eContainer.current.style.width = width;\n                    }\n                }\n            }\n\n            rowContainerCtrlRef.current = context.createBean(new RowContainerCtrl(name));\n            rowContainerCtrlRef.current.setComp(compProxy, eContainer.current!, eViewport.current!);\n        }\n\n    }, [areElementsReady, areElementsRemoved]);\n\n    const setContainerRef = useCallback((e: HTMLDivElement) => { eContainer.current = e; setRef(); }, [setRef]);\n    const setViewportRef = useCallback((e: HTMLDivElement) => { eViewport.current = e; setRef(); }, [setRef]);\n\n    const buildContainer = () => (\n        <div\n            className={ containerClasses }\n            ref={setContainerRef}\n            role={ rowCtrlsOrdered.length ? \"rowgroup\" : \"presentation\" }\n        >\n            {\n                rowCtrlsOrdered.map(rowCtrl =>\n                    <RowComp rowCtrl={ rowCtrl } containerType={ containerType } key={ rowCtrl.getInstanceId() }></RowComp>\n                )\n            }\n        </div>\n    );\n\n    return (\n        <>\n            {\n                centerTemplate ?\n                <div className={viewportClasses} ref={setViewportRef} role=\"presentation\">\n                    { buildContainer() }\n                </div> :\n                buildContainer()\n            }\n        </>\n    );\n};\n\nexport default memo(RowContainerComp);\n"]}