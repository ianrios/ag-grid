{"version":3,"file":"index.js","sources":["../../src/grid/core/solidCompWrapper.tsx","../../src/grid/core/solidCompWrapperFactory.tsx","../../src/grid/core/beansContext.tsx","../../src/grid/core/utils.tsx","../../src/grid/cellRenderer/detailCellRenderer.tsx","../../src/grid/userComps/jsUserComp.tsx","../../src/grid/userComps/solidUserComp.tsx","../../src/grid/userComps/userComp.tsx","../../src/grid/cellRenderer/groupCellRenderer.tsx","../../src/grid/core/solidFrameworkOverrides.tsx","../../src/grid/header/headerCellComp.tsx","../../src/grid/header/headerFilterCellComp.tsx","../../src/grid/header/headerGroupCellComp.tsx","../../src/grid/header/headerRowComp.tsx","../../src/grid/header/headerRowContainerComp.tsx","../../src/grid/header/gridHeaderComp.tsx","../../src/grid/cells/popupEditorComp.tsx","../../src/grid/cells/showEditDetails.tsx","../../src/grid/cells/showRenderDetails.tsx","../../src/grid/cells/cellComp.tsx","../../src/grid/rows/rowComp.tsx","../../src/grid/rows/rowContainerComp.tsx","../../src/grid/gridBodyComp.tsx","../../src/grid/tabGuardComp.tsx","../../src/grid/gridComp.tsx","../../src/grid/agGridSolid.tsx","../../src/index.tsx"],"sourcesContent":["import { WrappableInterface } from \"@ag-grid-community/core\";\nimport { PortalInfo, PortalManager } from \"../agGridSolid\";\n\nexport default class SolidCompWrapper implements WrappableInterface {\n\n    private eGui?: HTMLElement;\n    private SolidCompClass: any;\n\n    private portalManager: PortalManager;\n    private portalInfo?: PortalInfo;\n\n    private instance: any;\n\n    constructor(SolidCompClass: any, portalManager: PortalManager) {\n        this.SolidCompClass = SolidCompClass;        \n        this.portalManager = portalManager;\n    }\n\n    public init(props: any): void {\n        this.eGui = document.createElement('div');\n        this.eGui.className = 'ag-solid-container';\n        this.portalInfo = {\n            mount: this.eGui,\n            SolidClass: this.SolidCompClass,\n            props,\n            ref: instance => {\n                this.instance = instance;\n            }\n        };\n        this.portalManager.addPortal(this.portalInfo);\n    }\n\n    public destroy(): void {\n        this.portalInfo && this.portalManager.removePortal(this.portalInfo);\n    }\n\n    public getGui(): HTMLElement {\n        return this.eGui!;\n    }\n\n    public hasMethod(name: string): boolean {\n        return this.instance[name] != null;\n    }\n\n    public getFrameworkComponentInstance(): any {\n        return this.instance;\n    }\n\n    public callMethod(name: string, args: IArguments): void {\n        return this.instance[name].apply(this.instance, args);\n    }\n\n    public addMethod(name: string, callback: Function): void {\n        (this as any)[name] = callback;\n    }\n\n}\n","import { BaseComponentWrapper, FrameworkComponentWrapper, WrappableInterface } from \"@ag-grid-community/core\";\nimport { PortalManager } from \"../agGridSolid\";\nimport SolidCompWrapper from \"./solidCompWrapper\";\n\nexport default class SolidCompWrapperFactory extends BaseComponentWrapper<WrappableInterface> implements FrameworkComponentWrapper {\n\n    private portalManager: PortalManager;\n\n    constructor(portalManager: PortalManager) {\n        super();\n        this.portalManager = portalManager;\n    }\n\n    createWrapper(SolidComponentClass: any): WrappableInterface {\n        return new SolidCompWrapper(SolidComponentClass, this.portalManager);\n    }\n}\n","import { Beans } from '@ag-grid-community/core';\nimport { createContext } from \"solid-js\";\n\nexport const BeansContext = createContext<Beans>({} as Beans);\n","export const classesList = (...list: (string | null | undefined)[]): string => {\n    const filtered = list.filter( s => s != null && s !== '');\n\n    return filtered.join(' ');\n}\n\nexport class CssClasses {\n\n    private classesMap: {[name: string]: boolean} = {};\n\n    constructor(...initialClasses: string[]) {\n        initialClasses.forEach(className => {\n            this.classesMap[className] = true;\n        });\n    }\n\n    public setClass(className: string, on: boolean): CssClasses {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) { return this; }\n\n        const res = new CssClasses();\n        res.classesMap = {...this.classesMap};\n        res.classesMap[className] = on;\n        return res;\n    }\n\n    public toString(): string {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n\n}\n\nexport const isComponentStateless = (Component: any) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n\n    return (\n            typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)\n        ) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n}\n\nexport interface RefPointer<T> {\n    instance?: T;\n    afterSet?: (ref: T)=>void;\n}","import { GridOptions, IDetailCellRenderer, IDetailCellRendererCtrl, IDetailCellRendererParams } from \"@ag-grid-community/core\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport AgGridSolid, { AgGridSolidRef } from '../agGridSolid';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\n\nconst DetailCellRenderer = (props: IDetailCellRendererParams) => {\n\n    const {ctrlsFactory, context, \n        gridOptionsService, resizeObserverService, \n            clientSideRowModel, serverSideRowModel} = useContext(BeansContext);\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getGridCssClasses, setGridCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getDetailGridOptions, setDetailGridOptions] = createSignal<GridOptions>();\n    const [getDetailRowData, setDetailRowData] = createSignal<any[]>();\n\n    let ctrl: IDetailCellRendererCtrl;\n    let eGuiRef: HTMLDivElement;\n\n    const getCssClassesStr = createMemo(() => getCssClasses().toString() + ' ag-details-row');\n    const getGridCssClassesStr = createMemo(() => getGridCssClasses().toString() + ' ag-details-grid');\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return ctrl.refresh(); }\n    }));\n\n    onMount(() => {\n        if (props.template && typeof props.template === 'string') {\n            console.warn('AG Grid: detailCellRendererParams.template is not supported by Solid - this only works with frameworks that work against String templates. To change the template, please provide your own Solid Detail Cell Renderer.');\n        }\n\n        const compProxy: IDetailCellRenderer = {\n            addOrRemoveCssClass: (name: string, on: boolean) => setCssClasses(getCssClasses().setClass(name, on)),\n            addOrRemoveDetailGridCssClass: (name: string, on: boolean) => setGridCssClasses(getGridCssClasses().setClass(name, on)),\n            setDetailGrid: gridOptions => setDetailGridOptions(gridOptions),\n            setRowData: rowData => setDetailRowData(rowData),\n            getGui: () => eGuiRef\n        };\n\n        ctrl = ctrlsFactory.getInstance('detailCellRenderer') as IDetailCellRendererCtrl;\n        if (!ctrl) { return; } // should never happen, means master/detail module not loaded\n        context.createBean(ctrl);\n\n        ctrl.init(compProxy, props);\n\n        let resizeObserverDestroyFunc: () => void;\n\n        if (gridOptionsService.get('detailRowAutoHeight')) {\n            const checkRowSizeFunc = () => {\n                // when disposed, current is null, so nothing to do, and the resize observer will\n                // be disposed of soon\n                if (eGuiRef==null) { return; }\n\n                const clientHeight = eGuiRef.clientHeight;\n\n                // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n                // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n                // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n                // empty detail grid would still have some styling around it giving at least a few pixels.\n                if (clientHeight != null && clientHeight > 0) {\n                    // we do the update in a timeout, to make sure we are not calling from inside the grid\n                    // doing another update\n                    const updateRowHeightFunc = () => {\n                        props.node.setRowHeight(clientHeight);\n                        if (clientSideRowModel) {\n                            clientSideRowModel.onRowHeightChanged();\n                        } else if (serverSideRowModel) {\n                            serverSideRowModel.onRowHeightChanged();\n                        }\n                    };\n                    setTimeout(updateRowHeightFunc, 0);\n                }\n            };\n    \n            resizeObserverDestroyFunc = resizeObserverService.observeResize(eGuiRef, checkRowSizeFunc);\n            checkRowSizeFunc();\n        }\n\n        return () => {\n            context.destroyBean(ctrl);\n            if (resizeObserverDestroyFunc) {\n                resizeObserverDestroyFunc();\n            }\n        };\n    });\n\n    const setRef = (ref: AgGridSolidRef) => {\n        ctrl.registerDetailWithMaster(ref.api, ref.columnApi)\n    };\n\n    return (\n        <div class={getCssClassesStr()} ref={eGuiRef!}>\n            {\n                getDetailGridOptions() &&\n                <AgGridSolid class={getGridCssClassesStr()} {...getDetailGridOptions()} rowData={getDetailRowData()} ref={ setRef }></AgGridSolid> \n            }\n        </div>\n    );\n};\n\nexport default DetailCellRenderer;\n","import { UserCompDetails } from '@ag-grid-community/core';\nimport { onCleanup, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\n\nconst JsUserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: (ref: any)=>void\n})=> {\n    const { context } = useContext(BeansContext);\n\n    const promise = p.compDetails.newAgStackInstance();\n    if (!promise) { return <></>; }\n\n    const comp = promise.resolveNow(null, (x: any) => x); // js comps are never async\n    if (!comp) { return <></>; }\n    p.ref && p.ref(comp);\n\n    const gui = comp.getGui();\n\n    onCleanup( ()=> {\n        comp && context.destroyBean(comp);\n        p.ref && p.ref(undefined);\n    });\n\n    return <>{gui}</>;\n};\n\nexport default JsUserComp;","import { UserCompDetails } from '@ag-grid-community/core';\nimport { onCleanup } from 'solid-js';\n\nconst SolidUserComp = (props: {\n    compDetails: UserCompDetails, \n    ref?: any\n})=> {\n    const SolidClass = props.compDetails.componentClass;\n\n    let refSet = false;\n\n    const setRef = (ref: any)=> {\n        if (!props.ref) { return; }\n        props.ref(ref);\n        refSet = true;\n    };\n\n    onCleanup( ()=> {\n        if (refSet) {\n            props.ref && props.ref(undefined);\n        }\n    });\n\n    return <SolidClass ref={setRef} { ...props.compDetails.params }/>;\n};\n\nexport default SolidUserComp;\n","import { UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo } from 'solid-js';\nimport JsUserComp from './jsUserComp';\nimport SolidUserComp from './solidUserComp';\n\nconst UserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: any\n})=> {\n    \n    const showSolidComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <>\n            { showSolidComp() \n                && <SolidUserComp compDetails={p.compDetails} ref={p.ref} /> }\n            { showJsComp() \n                && <JsUserComp compDetails={p.compDetails} ref={p.ref} /> }\n        </>\n    );\n};\n\nexport default UserComp;\n","import { GroupCellRendererCtrl, GroupCellRendererParams, IGroupCellRenderer, UserCompDetails, _ } from \"@ag-grid-community/core\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport { BeansContext } from \"../core/beansContext\";\nimport { CssClasses } from \"../core/utils\";\nimport UserComp from \"../userComps/userComp\";\n\nconst GroupCellRenderer = (props: GroupCellRendererParams) => {\n\n    const context = useContext(BeansContext).context!;\n\n    let eGui: HTMLElement;\n    let eValueRef: HTMLElement;\n    let eCheckboxRef: HTMLElement;\n    let eExpandedRef: HTMLElement;\n    let eContractedRef: HTMLElement;\n\n    const [getInnerCompDetails, setInnerCompDetails] = createSignal<UserCompDetails>();\n    const [getChildCount, setChildCount] = createSignal<string>();\n    const [getValue, setValue] = createSignal<any>();\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getExpandedCssClasses, setExpandedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getContractedCssClasses, setContractedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getCheckboxCssClasses, setCheckboxCssClasses] = createSignal<CssClasses>(new CssClasses('ag-invisible'));\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return false; }\n    }));\n\n    onMount(() => {\n\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (details, valueToDisplay) => {\n                setInnerCompDetails(details);\n                const escapedValue = _.escapeString(valueToDisplay, true);\n                setValue(escapedValue);\n            },\n            setChildCount: count => setChildCount(count),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setContractedDisplayed: displayed => setContractedCssClasses(getContractedCssClasses().setClass('ag-hidden', !displayed)),\n            setExpandedDisplayed: displayed => setExpandedCssClasses(getExpandedCssClasses().setClass('ag-hidden', !displayed)),\n            setCheckboxVisible: visible => setCheckboxCssClasses(getCheckboxCssClasses().setClass('ag-invisible', !visible))\n        };\n\n        const ctrl = context.createBean(new GroupCellRendererCtrl());\n        ctrl.init(compProxy, eGui, eCheckboxRef, eExpandedRef, eContractedRef, GroupCellRenderer, props);\n        eGui.setAttribute('role', ctrl.getCellAriaRole())\n\n        return () => { context.destroyBean(ctrl);};\n    });\n\n    const getClassName = createMemo(() => `ag-cell-wrapper ${getCssClasses().toString()}`);\n    const getExpandedClassName = createMemo(() => `ag-group-expanded ${getExpandedCssClasses().toString()}`);\n    const getContractedClassName = createMemo(() => `ag-group-contracted ${getContractedCssClasses().toString()}`);\n    const getCheckboxClassName = createMemo(() => `ag-group-checkbox ${getCheckboxCssClasses().toString()}`);\n\n    const isShowUserComp = ()=> getInnerCompDetails() != null;\n    const isShowValue = ()=> getInnerCompDetails() == null && getValue() != null;\n\n    return (\n        <span class={getClassName()} ref={eGui!}>\n            <span class={getExpandedClassName()} ref={eExpandedRef!}></span>\n            <span class={getContractedClassName()} ref={eContractedRef!}></span>\n            <span class={getCheckboxClassName()} ref={eCheckboxRef!}></span>\n            <span class=\"ag-group-value\" ref={eValueRef!}>\n                { isShowUserComp() && <UserComp compDetails={getInnerCompDetails()!}></UserComp>}\n                { isShowValue() && <>{getValue()}</> }\n            </span>\n            <span class=\"ag-group-child-count\">{getChildCount()}</span>\n        </span>\n    );\n};\n\n// we do not memo() here, as it would stop the forwardRef working\nexport default GroupCellRenderer;\n","import { VanillaFrameworkOverrides } from \"@ag-grid-community/core\";\nimport DetailCellRenderer from \"../cellRenderer/detailCellRenderer\";\nimport GroupCellRenderer from \"../cellRenderer/groupCellRenderer\";\n\nexport class SolidFrameworkOverrides extends VanillaFrameworkOverrides {\n\n    constructor() {\n        super('solid');\n    }\n\n    private frameworkComponents: any = {\n        agGroupCellRenderer: GroupCellRenderer,\n        agGroupRowRenderer: GroupCellRenderer,\n        agDetailCellRenderer: DetailCellRenderer\n    };\n\n    public frameworkComponent(name: string): any {\n        return this.frameworkComponents[name];\n    }\n\n    isFrameworkComponent(comp: any): boolean {\n        if (!comp) { return false; }\n        const prototype = comp.prototype;\n        const isJsComp = prototype && 'getGui' in prototype;\n        return !isJsComp;\n    }\n}","import { ColumnSortState, CssClassManager, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl})=> {\n\n    const { ctrl } = props;\n\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>(ctrl.getColId());\n    const [getAriaSort, setAriaSort] = createSignal<ColumnSortState>();\n    const [getAriaDescription, setAriaDescription] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement\n    let eHeaderCompWrapper: HTMLDivElement\n    \n    let userComp: IHeader | undefined;\n\n    const setRef = (ref: any) => {\n        userComp = ref;\n    }\n\n    const clearRef = (ref: any) => {\n        if (userComp===ref) {\n            userComp = undefined;\n        }\n    }\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    onMount(() => {\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n\n            setAriaDescription: description => setAriaDescription(description),\n            setAriaSort: sort => setAriaSort(sort),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: () => userComp\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize, eHeaderCompWrapper);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.insertAdjacentElement('afterend', selectAllGui);\n        ctrl.setDragSource(eGui);\n    });\n\n    const style = createMemo(() => ({ width: getWidth() }));\n\n    const showSolidComp = createMemo( ()=> {\n        const details = getUserCompDetails();\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = getUserCompDetails();\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <div\n            ref={eGui!}\n            class=\"ag-header-cell\"\n            style={ style() }\n            col-id={ getColId() }\n            aria-sort={ getAriaSort() }\n            role=\"columnheader\"\n            tabIndex={-1}\n            aria-description={ getAriaDescription() }\n        >\n            <div ref={eResize!} class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div ref={eHeaderCompWrapper!} class=\"ag-header-cell-comp-wrapper\" role=\"presentation\">\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} ref={setRef} /> }\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderCellComp;\n","import { AgPromise, HeaderFilterCellCtrl, IFloatingFilter, IHeaderFilterCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderFilterCellComp = (props: {ctrl: HeaderFilterCellCtrl}) => {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssBodyClasses, setBodyCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssButtonWrapperClasses, setButtonWrapperCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getButtonWrapperAriaHidden, setButtonWrapperAriaHidden] = createSignal<\"true\" | \"false\">(\"false\");\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails | null | undefined>();\n\n    let eGui: HTMLDivElement;\n    let eFloatingFilterBody: HTMLDivElement;\n    let eButtonWrapper: HTMLDivElement;\n    let eButtonShowMainFilter: HTMLButtonElement;\n\n    let alreadyResolved = false;\n    let userCompResolve: (value: IFloatingFilter)=>void;\n    let userCompPromise: AgPromise<IFloatingFilter>;\n    onMount( ()=> {\n        userCompPromise = new AgPromise<IFloatingFilter>( resolve => {\n            userCompResolve = resolve;\n        });\n    });\n    \n    const setRef = (value: IFloatingFilter) => {\n        // i don't know why, but react was calling this method multiple\n        // times, thus un-setting, them immediately setting the reference again.\n        // because we are resolving a promise, it's not good to be resolving\n        // the promise multiple times, so we only resolve the first time.\n        if (alreadyResolved) { return; }\n        // we also skip when it's un-setting\n        if (value==null) { return; }\n\n        userCompResolve && userCompResolve(value);\n        alreadyResolved = true;\n    };\n\n    const { ctrl } = props;\n\n    onMount(() => {\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses(prev => prev.setClass(name, on)),\n            setButtonWrapperDisplayed: (displayed) => {\n                setButtonWrapperCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setButtonWrapperAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setWidth: width => setWidth(width),\n            setCompDetails: compDetails => setUserCompDetails(compDetails),\n            getFloatingFilterComp: ()=> userCompPromise,\n            setMenuIcon: eIcon => eButtonShowMainFilter.appendChild(eIcon)\n        };\n\n        ctrl.setComp(compProxy, eGui, eButtonShowMainFilter, eFloatingFilterBody);\n\n    });\n\n    const getStyle = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getCssClassesString = createMemo( ()=> 'ag-header-cell ag-floating-filter ' + getCssClasses().toString() );\n    const getBodyCssClassesString = createMemo( ()=> getCssBodyClasses().toString(), );\n    const getButtonWrapperCssClassesString = createMemo( ()=> 'ag-floating-filter-button ' + getCssButtonWrapperClasses().toString() );\n    \n    return (\n        <div ref={eGui!} class={getCssClassesString()} style={getStyle()} role=\"gridcell\" tabIndex={-1}>\n            <div ref={eFloatingFilterBody!} class={getBodyCssClassesString()} role=\"presentation\">\n                { getUserCompDetails() && <UserComp compDetails={getUserCompDetails()!} ref={setRef}/> }\n            </div>\n            <div ref={eButtonWrapper!} aria-hidden={getButtonWrapperAriaHidden()} class={getButtonWrapperCssClassesString()} role=\"presentation\">\n                <button ref={eButtonShowMainFilter!} type=\"button\" class=\"ag-button ag-floating-filter-button-button\" tabIndex={-1}></button>\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderFilterCellComp;\n","import { HeaderGroupCellCtrl, IHeaderGroupCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, onMount } from 'solid-js';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n    const { ctrl } = props;\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssResizableClasses, setResizableCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getResizableAriaHidden, setResizableAriaHidden] = createSignal<\"true\" | \"false\">(\"false\");\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>(ctrl.getColId());\n    const [getAriaExpanded, setAriaExpanded] = createSignal<'true'|'false'|undefined>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement;\n\n\n    onMount( () => {\n\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            setResizableDisplayed: (displayed) => {\n                setResizableCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setAriaExpanded: expanded => setAriaExpanded(expanded)\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize);\n    });\n\n    // add drag handling, must be done after component is added to the dom\n    createEffect(()=> {\n        const userCompDetails = getUserCompDetails();\n        if (userCompDetails == null) { return; }\n\n        ctrl.setDragSource(eGui);\n    });\n\n    const style = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getClassName = createMemo( ()=> 'ag-header-group-cell ' + getCssClasses().toString() );\n    const getResizableClassName = createMemo( ()=> 'ag-header-cell-resize ' + getCssResizableClasses().toString() );\n\n    return (\n        <div ref={eGui!} class={getClassName()} style={style()} col-id={getColId()} \n                    role=\"columnheader\" tabIndex={-1} aria-expanded={getAriaExpanded()}>\n\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} /> }\n\n            <div ref={eResize!} aria-hidden={getResizableAriaHidden()} class={getResizableClassName()}></div>\n        </div>\n    );\n};\n\nexport default HeaderGroupCellComp;","import { AbstractHeaderCellCtrl, HeaderCellCtrl, HeaderFilterCellCtrl, HeaderGroupCellCtrl, HeaderRowCtrl, HeaderRowType, IHeaderRowComp, _ } from '@ag-grid-community/core';\nimport { createMemo, createSignal, For, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport HeaderCellComp from './headerCellComp';\nimport HeaderFilterCellComp from './headerFilterCellComp';\nimport HeaderGroupCellComp from './headerGroupCellComp';\n\nconst HeaderRowComp = (props: {ctrl: HeaderRowCtrl}) => {\n\n    const { gridOptionsService } = useContext(BeansContext);\n    const { ctrl } = props;\n    \n    const [ getTransform, setTransform ] = createSignal<string | undefined>(ctrl.getTransform()!);\n    const [ getHeight, setHeight ] = createSignal<string>();\n    const [ getTop, setTop ] = createSignal<string>();\n    const [ getWidth, setWidth ] = createSignal<string>();\n    const [ getAriaRowIndex, setAriaRowIndex ] = createSignal<number>(ctrl.getAriaRowIndex());\n    const [ getCellCtrls, setCellCtrls ] = createSignal<AbstractHeaderCellCtrl[]>([]);\n\n    let eGui: HTMLDivElement;\n\n    const setCellCtrlsMaintainOrder = (next: AbstractHeaderCellCtrl[]) => {\n        const prev = getCellCtrls();\n        const isEnsureDomOrder = gridOptionsService.get('ensureDomOrder');\n        const isPrintLayout = gridOptionsService.isDomLayout('print');\n\n        // if we are ensuring dom order, we set the ctrls into the dom in the same order they appear on screen\n        if (isEnsureDomOrder || isPrintLayout) {\n            return next;\n        }\n\n        // if not maintaining order, we want to keep the dom elements we have and add new ones to the end,\n        // otherwise we will loose transition effects as elements are placed in different dom locations\n        const prevMap = _.mapById(prev, c => c.getInstanceId());\n        const nextMap = _.mapById(next, c => c.getInstanceId());\n\n        const oldCtrlsWeAreKeeping = prev.filter(c => nextMap.has(c.getInstanceId()));\n        const newCtrls = next.filter(c => !prevMap.has(c.getInstanceId()))\n\n        const nextOrderMaintained = [...oldCtrlsWeAreKeeping, ...newCtrls];\n        setCellCtrls(nextOrderMaintained);\n    };\n\n    onMount(() => {\n        const compProxy: IHeaderRowComp = {\n            setHeight: height => setHeight(height),\n            setTop: top => setTop(top),\n            setHeaderCtrls: ctrls => setCellCtrlsMaintainOrder(ctrls),\n            setWidth: width => setWidth(width)\n        };\n        ctrl.setComp(compProxy);\n    });\n\n    const style = createMemo( ()=> ({\n        transform: getTransform(),\n        height: getHeight(),\n        top: getTop(),\n        width: getWidth()\n    }));\n\n    const cssClasses = ctrl.getHeaderRowClass();\n\n    const createCellJsx = (cellCtrl: AbstractHeaderCellCtrl) => {\n        switch (ctrl.getType()) {\n            case HeaderRowType.COLUMN_GROUP :\n                return <HeaderGroupCellComp ctrl={cellCtrl as HeaderGroupCellCtrl} />;\n\n            case HeaderRowType.FLOATING_FILTER :\n                return <HeaderFilterCellComp ctrl={cellCtrl as HeaderFilterCellCtrl} />;\n                \n            default :\n                return <HeaderCellComp ctrl={cellCtrl as HeaderCellCtrl} />;\n        }\n    };\n\n    // below, we are not doing floating filters, not yet\n    return (\n        <div ref={eGui!} class={cssClasses} role=\"row\" style={style()} aria-rowindex={getAriaRowIndex()}>\n            <For each={getCellCtrls()}>{(cellCtrl, i) => createCellJsx(cellCtrl) }</For>\n        </div>\n    );\n};\n\nexport default HeaderRowComp;\n","import { ColumnPinnedType, HeaderRowContainerCtrl, HeaderRowCtrl, IHeaderRowContainerComp } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowComp from './headerRowComp';\n\nconst HeaderRowContainerComp = (props: {pinned: ColumnPinnedType | null})=> {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getAriaHidden, setAriaHidden] = createSignal<true | false>(false);\n    const [getCenterContainerWidth, setCenterContainerWidth] = createSignal<string>();\n    const [getPinnedContainerWidth, setPinnedContainerWidth] = createSignal<string>();\n    const [getHeaderRowCtrls, setHeaderRowCtrls] = createSignal<HeaderRowCtrl[]>([]);\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const pinnedLeft = props.pinned === 'left';\n    const pinnedRight = props.pinned === 'right';\n    const centre = !pinnedLeft && !pinnedRight;\n\n    const destroyFuncs: (()=>void)[] = [];\n\n    onCleanup(() => {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount(() => {\n        const compProxy: IHeaderRowContainerComp = {\n            setDisplayed: (displayed) => {\n                setCssClasses(getCssClasses().setClass('ag-hidden', !displayed));\n                setAriaHidden(!displayed)\n            },\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n\n            // centre only\n            setCenterWidth: width => setCenterContainerWidth(width),\n            setViewportScrollLeft: left => eGui.scrollLeft = left,\n\n            // pinned only\n            setPinnedContainerWidth: width => setPinnedContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        ctrl.setComp(compProxy, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const getClassName = createMemo( ()=> getCssClasses().toString() );\n\n    const insertRowsJsx = ()=> \n    <For each={getHeaderRowCtrls()}>{ ctrl =>\n        <HeaderRowComp ctrl={ctrl}/>\n    }</For>;\n    \n    const eCenterContainerStyle = createMemo(()=> ({\n        width: getCenterContainerWidth()\n    }));\n\n    const ePinnedStyle = createMemo( ()=> ({\n        width: getPinnedContainerWidth(),\n        'min-width': getPinnedContainerWidth(),\n        'max-width': getPinnedContainerWidth()\n    }));\n\n    return (\n        <>\n            { \n                pinnedLeft && \n                <div ref={eGui!} class={\"ag-pinned-left-header \" + getClassName()} aria-hidden={getAriaHidden()} role=\"presentation\" style={ePinnedStyle()}>\n                    { insertRowsJsx() }\n                </div>\n            }\n            { \n                pinnedRight && \n                <div ref={eGui!} class={\"ag-pinned-right-header \" + getClassName()} aria-hidden={getAriaHidden()} role=\"presentation\" style={ePinnedStyle()}>\n                { insertRowsJsx() }\n            </div>\n            }\n            { \n                centre && \n                <div ref={eGui!} class={\"ag-header-viewport \" + getClassName()} role=\"presentation\">\n                    <div class=\"ag-header-container\" role=\"rowgroup\" style={eCenterContainerStyle()}>\n                        { insertRowsJsx() }\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default HeaderRowContainerComp;\n","import { GridHeaderCtrl, IGridHeaderComp } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowContainerComp from './headerRowContainerComp';\n\nconst GridHeaderComp = ()=> {\n    \n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getHeight, setHeight] = createSignal<string>();\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount( () => {\n\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setHeightAndMinHeight: height => setHeight(height)\n        };\n\n        const ctrl = context.createBean(new GridHeaderCtrl());\n        ctrl.setComp(compProxy, eGui, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const className = createMemo( ()=> {\n        let res = getCssClasses().toString();\n        return 'ag-header ' + res;\n    });\n\n    const style = createMemo( ()=> ({\n        height: getHeight(),\n        'min-height': getHeight()\n    }));\n\n    return (\n        <div ref={eGui!} class={className()} style={style()} role=\"presentation\">\n            <HeaderRowContainerComp pinned={'left'} />\n            <HeaderRowContainerComp pinned={null}/>\n            <HeaderRowContainerComp pinned={'right'} />\n        </div>\n    );\n};\n\nexport default GridHeaderComp;\n","import { CellCtrl, PopupEditorWrapper } from '@ag-grid-community/core';\nimport { JSX, onCleanup, useContext } from 'solid-js';\nimport { Portal } from \"solid-js/web\";\nimport { BeansContext } from '../core/beansContext';\nimport { EditDetails } from './common';\n\nconst PopupEditorComp = (props: {\n            editDetails: EditDetails, \n            cellCtrl: CellCtrl, \n            eParentCell: HTMLElement,\n            children?: JSX.Element\n        }) => {\n\n    const { context, popupService, localeService, gridOptionsService } = useContext(BeansContext);\n\n    const {editDetails, cellCtrl, eParentCell} = props;\n    const {compDetails} = editDetails;\n\n    const useModelPopup = gridOptionsService.get('stopEditingWhenCellsLoseFocus');\n    \n    const wrapper = context.createBean(new PopupEditorWrapper(compDetails.params));\n    const ePopupGui = wrapper.getGui();\n\n    const positionParams = {\n        column: cellCtrl.getColumn(),\n        rowNode: cellCtrl.getRowNode(),\n        type: 'popupCellEditor',\n        eventSource: eParentCell,\n        ePopup: ePopupGui,\n        position: editDetails!.popupPosition,\n        keepWithinBounds: true\n    };\n\n    const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n\n    const translate = localeService.getLocaleTextFunc();\n\n    const addPopupRes = popupService.addPopup({\n        modal: useModelPopup,\n        eChild: ePopupGui,\n        closeOnEsc: true,\n        closedCallback: () => { cellCtrl.onPopupEditorClosed(); },\n        anchorToElement: eParentCell,\n        positionCallback,\n        ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n    });\n\n    const hideEditorPopup: (()=>void) | undefined = addPopupRes ? addPopupRes.hideFunc : undefined;\n\n    onCleanup( ()=> {\n        if (hideEditorPopup!=null) {\n            hideEditorPopup();\n        }\n        context.destroyBean(wrapper);\n    });\n\n    return (\n        <Portal mount={ePopupGui}>\n            { props.children }\n        </Portal>\n    );\n};\n\nexport default PopupEditorComp;\n","import { CellCtrl, ICellEditor } from '@ag-grid-community/core';\nimport { createMemo } from 'solid-js';\nimport UserComp from '../userComps/userComp';\nimport { EditDetails } from './common';\nimport PopupEditorComp from './popupEditorComp';\n\nconst ShowEditDetails = (props: {\n    editDetails: EditDetails,\n    cellCtrl: CellCtrl,\n    eGuiFn: () => HTMLDivElement,\n    setInlineRef: (ref: ICellEditor) => void,\n    setPopupRef: (ref: ICellEditor) => void\n}\n) => {\n\n    const getCompDetails = createMemo(() => props.editDetails.compDetails);\n    const compDetails = props.editDetails.compDetails;\n\n    // when editing, we must have a comp, otherwise doesn't work\n    if (!compDetails) { return <></>; }\n\n    const inPopup = props.editDetails.popup;\n    const eGui = props.eGuiFn();\n\n    return (\n        <>\n            {inPopup &&\n                <PopupEditorComp cellCtrl={props.cellCtrl} eParentCell={eGui} editDetails={props.editDetails}>\n                    <UserComp compDetails={getCompDetails()!} ref={props.setPopupRef} />\n                </PopupEditorComp>\n            }\n            {!inPopup &&\n                <UserComp compDetails={getCompDetails()!} ref={props.setInlineRef} />\n            }\n        </>\n    );\n};\n\nexport default ShowEditDetails;\n","import { CellCtrl, Component  } from '@ag-grid-community/core';\nimport { createMemo, onCleanup, Setter, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport UserComp from '../userComps/userComp';\nimport { RenderDetails } from './common';\n\nconst ToolsComp = (props: {\n    includeSelection: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    setSelectionCheckboxId: Setter<string | undefined>,\n    cellCtrl: CellCtrl\n}) => {\n\n    const { context } = useContext(BeansContext);\n\n    const CompWrapper = (innerProps: {\n        createFn: () => Component | undefined\n    }) => {\n        const comp = innerProps.createFn();\n        if (!comp) { return <></>; }\n\n        onCleanup(() => context.destroyBean(comp));\n        return <>{comp.getGui()}</>\n    };\n\n    return (\n        <>\n            { props.includeSelection && \n                <CompWrapper createFn={() => {\n                    const checkboxSelectionComp = props.cellCtrl.createSelectionCheckbox();\n                    props.setSelectionCheckboxId(checkboxSelectionComp.getCheckboxId());\n                    return checkboxSelectionComp;\n                }}/> }\n            { props.includeDndSource && \n                <CompWrapper createFn={() => props.cellCtrl.createDndSource()}/> }\n            { props.includeRowDrag && \n                <CompWrapper createFn={() => props.cellCtrl.createRowDragComp()}/> }\n        </>\n    );\n};\n\nconst ShowRenderDetails = (props: {\n    showDetails: RenderDetails,\n    ref: any,\n    showCellWrapper: boolean,\n    showTools: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    includeSelection: boolean,\n    setSelectionCheckboxId: Setter<string | undefined>\n    cellCtrl: CellCtrl,\n    cellInstanceId: string,\n    setECellValue: (eCellValue: HTMLElement) => void\n}) => {\n\n    const getCompDetails = createMemo(() => props.showDetails.compDetails);\n    const isNoCompDetails = createMemo(() => props.showDetails.compDetails == null);\n\n    // if we didn't do this, objects would cause error. we depend on objects for things\n    // like the aggregation functions avg and count, which return objects and depend on toString()\n    // getting called.\n    const valueForNoCellRenderer = () => {\n        const value = props.showDetails.value;\n        return (value && value.toString) ? value.toString() : value;\n    };\n\n    const bodyJsxFunc = () => (\n        <>\n            {isNoCompDetails() && <>{valueForNoCellRenderer()}</>}\n            {getCompDetails() && <UserComp compDetails={getCompDetails()!}\n                ref={props.ref}/>}\n        </>\n    );\n\n    return (\n        <>\n            {\n                props.showTools &&\n                <ToolsComp\n                    includeDndSource={props.includeDndSource}\n                    includeRowDrag={props.includeRowDrag}\n                    includeSelection={props.includeSelection}\n                    setSelectionCheckboxId={props.setSelectionCheckboxId}\n                    cellCtrl={props.cellCtrl} />\n            }\n            {\n                props.showCellWrapper\n                    ? (\n                        <span role=\"presentation\" id={`cell-${props.cellInstanceId}`} class=\"ag-cell-value\" ref={props.setECellValue}>\n                            {bodyJsxFunc()}\n                        </span>\n                    )\n                    : bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport default ShowRenderDetails;\n","import { CellCtrl, CellStyle, CssClassManager, ICellComp, ICellEditor, ICellRenderer, _ } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onMount } from 'solid-js';\nimport { EditDetails, RenderDetails } from './common';\nimport ShowEditDetails from './showEditDetails';\nimport ShowRenderDetails from './showRenderDetails';\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid SolidJS cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid SolidJS cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const [renderDetails, setRenderDetails ] = createSignal<RenderDetails>();\n    const [editDetails, setEditDetails ] = createSignal<EditDetails>();\n\n    let renderCompVersion = 0;\n    const [renderCompVersionList, setRenderCompVersionList] = createSignal<number[]>([renderCompVersion]);\n\n    const [userStyles, setUserStyles] = createSignal<CellStyle>();\n\n    const [tabIndex, setTabIndex] = createSignal<number|undefined>(cellCtrl.getTabIndex());\n    const [colId, setColId] = createSignal<string>(cellCtrl.getColumnIdSanitised());\n    const [selectionCheckboxId, setSelectionCheckboxId] = createSignal<string>();\n    const [includeSelection, setIncludeSelection] = createSignal<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = createSignal<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = createSignal<boolean>(false);\n\n    const forceWrapper = cellCtrl.isForceWrapper();\n\n    let eCellWrapper: HTMLDivElement;\n    let eCellValue: HTMLElement;\n    const setECellValue = (val: HTMLElement)=> {\n        eCellValue = val;\n    };\n\n    let eGui: HTMLDivElement;\n    let cellRenderer: ICellRenderer | null = null;\n\n    let cellEditor: ICellEditor | null = null;\n    const setEditorRef = (popup: boolean, ref: ICellEditor)=> {\n        cellEditor = ref;\n        if (!cellEditor) { return; }\n\n        checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n\n        const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n        if (editingCancelledByUserComp) {\n            // we cannot set state inside render, so hack is to do it in next VM turn\n            setTimeout(() => {\n                cellCtrl.stopEditing(true);\n                cellCtrl.focusCell(true);\n            });\n        }\n\n        const refAny = ref as any;\n        if (refAny.afterGuiAttached) {\n            setTimeout(() => refAny.afterGuiAttached(), 0);\n        }\n    }\n    const setPopupEditorRef = (ref: ICellEditor) => setEditorRef(true, ref);\n    const setInlineEditorRef = (ref: ICellEditor) => setEditorRef(false, ref);\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    const showTools = createMemo(() => renderDetails() != null && (includeSelection() || includeDndSource() || includeRowDrag()) );\n    const showCellWrapper = createMemo(() => forceWrapper || showTools());\n\n    const cellInstanceId = cellCtrl.getInstanceId();\n\n    onMount( () => {\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setUserStyles: (styles: CellStyle) => setUserStyles(styles),\n            getFocusableElement: () => eGui,\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            \n            getCellEditor: () => cellEditor,\n            getCellRenderer: () => cellRenderer ? cellRenderer : null,\n            getParentOfValue: () => eCellValue ? eCellValue : eCellWrapper ? eCellWrapper : eGui,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails({\n                    value,\n                    compDetails,\n                    force\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition) => {\n                if (compDetails) {\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(undefined);\n                }\n            }\n        };\n\n        cellCtrl.setComp(compProxy, eGui, eCellWrapper, printLayout, editingRow);\n    });\n\n    createEffect(() => {\n        const isEditing = !!editDetails();\n        const isPopup = isEditing && !!editDetails()?.popup;\n\n        cssClassManager.addOrRemoveCssClass('ag-cell-value', !showCellWrapper());\n        cssClassManager.addOrRemoveCssClass('ag-cell-inline-editing', isEditing && !isPopup);\n        cssClassManager.addOrRemoveCssClass('ag-cell-popup-editing', isEditing && isPopup);\n        cssClassManager.addOrRemoveCssClass('ag-cell-not-inline-editing', !isEditing || isPopup);\n        cellCtrl.getRowCtrl()?.setInlineEditingCss(isEditing);\n    });\n\n    // we only do refreshing for JS Comps. for SolidJS, the props will change for the cell renderer.\n    let readyForRefresh = false;\n    createEffect(() => {\n        const details = renderDetails();\n        const isJsCellRenderer = details != null && details.compDetails != null && !details.compDetails.componentFromFramework;\n        if (!isJsCellRenderer) {\n            readyForRefresh = false;\n            return;\n        }\n        if (!readyForRefresh) {\n            readyForRefresh = true;\n            return;\n        }\n\n        if (!cellRenderer) { return; }\n\n        const params = details.compDetails!.params;\n        const result = cellRenderer.refresh ? cellRenderer.refresh(params) : false;\n        if (result != true) {\n            // increasing the render key forces a new instance of ShowRenderDetails,\n            // as we iteration through renderCompVersion, if the contents of\n            // renderCompVersion changes, that maps to a new ShowRenderDetails instance.\n            renderCompVersion++;\n            setRenderCompVersionList([renderCompVersion]);\n        }\n    });\n\n    // we pass in eGui as a function below as eGui is not ready\n    // when the template is built, only after it. so we defer\n    // reading eGui variable until it's needed, after ShowEditDetails\n    // is created.\n    const eGuiFn = () => eGui;\n\n    const bodyJsxFunc = () => (\n        <>\n                <For each={\n                    renderCompVersionList()}>{() =>\n                    <>\n                        { renderDetails() && <ShowRenderDetails \n                            showDetails={renderDetails()!}\n                            ref={cellRenderer}\n                            cellInstanceId={cellInstanceId}\n                            showCellWrapper={showCellWrapper()}\n                            cellCtrl={cellCtrl}\n                            includeDndSource={includeDndSource()}\n                            includeRowDrag={includeRowDrag()}\n                            includeSelection={includeSelection()}\n                            setSelectionCheckboxId={setSelectionCheckboxId}\n                            showTools={showTools()}\n                            setECellValue={setECellValue}\n                        /> }\n                    </>\n                }</For>\n                { editDetails() &&\n                    <ShowEditDetails\n                        editDetails={editDetails()!}\n                        cellCtrl={cellCtrl}\n                        eGuiFn={eGuiFn}\n                        setInlineRef={setInlineEditorRef}\n                        setPopupRef={setPopupEditorRef}\n                    /> \n                }\n        </>);\n\n    return (\n        <div\n            ref={ eGui! }\n            style={ userStyles() }\n            tabIndex={ tabIndex() }\n            role={ cellCtrl.getCellAriaRole() }\n            col-id={ colId() }\n        > {\n            showCellWrapper()\n                ? (\n                    <div class=\"ag-cell-wrapper\" role=\"presentation\" ref={ eCellWrapper! }>\n                        { bodyJsxFunc() }\n                    </div>\n                )\n                : bodyJsxFunc()\n            }\n        </div>\n    );\n}\n\nexport default CellComp;\n","import { CellCtrl, CssClassManager, ICellRenderer, IRowComp, RowContainerType, RowCtrl, RowStyle, UserCompDetails } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount } from \"solid-js\";\nimport CellComp from '../cells/cellComp';\nimport UserComp from '../userComps/userComp';\n\ninterface CellCtrls {\n    list: CellCtrl[],\n    instanceIdMap: Map<string, CellCtrl>\n}\n\nconst maintainOrderOnColumns = (prev: CellCtrls, next: CellCtrl[], domOrder: boolean): CellCtrls => {\n    if (domOrder) {\n        const res: CellCtrls = { list: next, instanceIdMap: new Map() };\n        next.forEach(c => res.instanceIdMap.set(c.getInstanceId(), c));\n\n        return res;\n    }\n\n    // if dom order not important, we don't want to change the order\n    // of the elements in the dom, as this would break transition styles\n    const oldCellCtrls: CellCtrl[] = [];\n    const newCellCtrls: CellCtrl[] = [];\n    const newInstanceIdMap: Map<string, CellCtrl> = new Map();\n    const tempMap: Map<string, CellCtrl> = new Map();\n\n    next.forEach(c => tempMap.set(c.getInstanceId(), c));\n\n    prev.list.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (tempMap.has(instanceId)) {\n            oldCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    next.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (!prev.instanceIdMap.has(instanceId)) {\n            newCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    const res: CellCtrls = {\n        list: [...oldCellCtrls, ...newCellCtrls],\n        instanceIdMap: newInstanceIdMap\n    };\n\n    return res;\n}\n\nconst RowComp = (params: {rowCtrl: RowCtrl, containerType: RowContainerType}) => {\n\n    const { rowCtrl, containerType } = params;\n\n    const [getRowIndex, setRowIndex] = createSignal<string>();\n    const [getRowId, setRowId] = createSignal<string>();\n    const [getRowBusinessKey, setRowBusinessKey] = createSignal<string>();\n    const [getTabIndex, setTabIndex] = createSignal<number | undefined>(rowCtrl.getTabIndex());\n    const [getUserStyles, setUserStyles] = createSignal<RowStyle>();\n    const [getCellCtrls, setCellCtrls] = createSignal<CellCtrls>({ list: [], instanceIdMap: new Map() });\n    const [getFullWidthCompDetails, setFullWidthCompDetails] = createSignal<UserCompDetails>();\n    const [getDomOrder, setDomOrder] = createSignal<boolean>(false);\n\n    // these styles have initial values, so element is placed into the DOM with them,\n    // rather than an transition getting applied.\n    const [getTop, setTop] = createSignal<string | undefined>(rowCtrl.getInitialRowTop(containerType));\n    const [getTransform, setTransform] = createSignal<string | undefined>(rowCtrl.getInitialTransform(containerType));\n\n    let eGui: HTMLDivElement;\n    let fullWidthCompRef: ICellRenderer;\n\n    const setFullWidthRef = (newRef: ICellRenderer)=> {\n        fullWidthCompRef = newRef;\n    };\n\n    createEffect(() => {\n        const compDetails = getFullWidthCompDetails();\n        if (!compDetails) { return; }\n\n        let tryCount = 0;\n\n        // puts autoHeight onto full with detail rows. this needs trickery, as we need\n        // the HTMLElement for the provided Detail Cell Renderer. this pattern was copied\n        // from React, it's possible it's not needed here, however given it's hard to be\n        // sure on Solid's async behavious, keeping the patter here.\n        const trySetup = ()=> {\n            const eChild = eGui.firstChild as HTMLElement;\n            if (eChild) {\n                rowCtrl.setupDetailRowAutoHeight(eChild);\n                return;\n            }\n\n            if (tryCount>=10) { return; }\n\n            tryCount++;\n            setTimeout(trySetup, 0);\n        };\n\n        trySetup();\n    });\n\n    onMount(() => {\n        // because React is asychronous, it's possible the RowCtrl is no longer a valid RowCtrl. This can\n        // happen if user calls two API methods one after the other, with the second API invalidating the rows\n        // the first call created. Thus the rows for the first call could still get created even though no longer needed.\n        if (!rowCtrl.isAlive()) {  return; }\n\n        const cssClassManager = new CssClassManager(() => eGui);\n\n        const compProxy: IRowComp = {\n            // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)\n            // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.\n            setTop: value => setTop(value),\n            setTransform: value => setTransform(value),\n\n            // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of\n            // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setRowIndex: value => setRowIndex(value),\n            setRowId: value => setRowId(value),\n            setRowBusinessKey: value => setRowBusinessKey(value),\n            setUserStyles: (styles: RowStyle) => setUserStyles(styles),\n            // if we don't maintain the order, then cols will be ripped out and into the dom\n            // when cols reordered, which would stop the CSS transitions from working\n            setCellCtrls: next => setCellCtrls(maintainOrderOnColumns(getCellCtrls(), next, getDomOrder())),\n            showFullWidth: compDetails => setFullWidthCompDetails(compDetails),\n            getFullWidthCellRenderer: ()=> fullWidthCompRef,\n        };\n        rowCtrl.setComp(compProxy, eGui, containerType);\n        onCleanup(() => rowCtrl.unsetComp(containerType));\n    });\n\n\n    const getRowStyles = createMemo(() => {\n        const res = { \n            top: getTop(), \n            transform: getTransform(),\n        };\n\n        Object.assign(res, getUserStyles());\n        return res;\n    });\n\n    const isShowCells = createMemo( ()=> getCellCtrls()!=null );\n    const isShowFullWidth = createMemo( ()=> getFullWidthCompDetails()!=null );\n\n    const showCellsJsx = ()=> (\n            <For each={getCellCtrls().list}>{ cellCtrl =>\n                <CellComp\n                        cellCtrl={ cellCtrl }\n                        editingRow={ rowCtrl.isEditing() }\n                        printLayout={ rowCtrl.isPrintLayout() }\n                    />\n            }</For>\n    );\n\n    const showFullWidthJsx = ()=> (\n        <UserComp compDetails={ getFullWidthCompDetails()! } ref={setFullWidthRef}/>\n    );\n\n    return (\n        <div\n            ref={ eGui! }\n            role='row'\n            style={ getRowStyles() }\n            row-index={ getRowIndex() }\n            row-id={ getRowId() }\n            row-business-key={ getRowBusinessKey() }\n            tabIndex={ getTabIndex() }\n        >\n            { isShowFullWidth() && showFullWidthJsx() }\n            { isShowCells() && showCellsJsx() }\n\n        </div>\n    );\n};\n\nexport default RowComp;\n","import { getRowContainerTypeForName, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from '../core/beansContext';\nimport { classesList } from '../core/utils';\nimport RowComp from './rowComp';\n\nconst RowContainerComp = (props: {name: RowContainerName})=> {\n\n    const {context} = useContext(BeansContext);\n\n    const [viewportHeight, setViewportHeight] = createSignal<string>('');\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = createSignal<RowCtrl[]>([]);\n    const [rowCtrls, setRowCtrls] = createSignal<RowCtrl[]>([]);\n    const [domOrder, setDomOrder] = createSignal<boolean>(false);\n\n    const { name } = props;\n    const containerType = createMemo(() => getRowContainerTypeForName(name));\n\n    let eViewport: HTMLDivElement;\n    let eContainer: HTMLDivElement;\n\n    const cssClasses = createMemo(() => RowContainerCtrl.getRowContainerCssClasses(name));\n    const viewportClasses = createMemo(() => classesList(cssClasses().viewport));\n    const containerClasses = createMemo(() => classesList(cssClasses().container));\n\n    // no need to useMemo for boolean types\n    const centerTemplate = name === RowContainerName.CENTER\n        || name === RowContainerName.TOP_CENTER \n        || name === RowContainerName.BOTTOM_CENTER \n        || name === RowContainerName.STICKY_TOP_CENTER;\n\n    // if domOrder=true, then we just copy rowCtrls into rowCtrlsOrdered observing order,\n    // however if false, then we need to keep the order as they are in the dom, otherwise rowAnimation breaks\n    let rowCtrlsOrderedCopy: RowCtrl[] = [];\n    createEffect( () => {\n        if (domOrder()) {\n            setRowCtrlsOrdered(rowCtrls());\n            return;\n        }\n        // if dom order not important, we don't want to change the order\n        // of the elements in the dom, as this would break transition styles\n        // \n        // we use the rowCtrlsOrderedCopy, to avoid this effect depending on and\n        // setting the same value, hence causing an infinite loop\n        const prev = rowCtrlsOrderedCopy; \n        const oldRows = prev.filter(r => rowCtrls().indexOf(r) >= 0);\n        const newRows = rowCtrls().filter(r => oldRows.indexOf(r) < 0);\n        const next = [...oldRows, ...newRows];\n        setRowCtrlsOrdered(next);\n        rowCtrlsOrderedCopy = next;\n    });\n\n    onMount(() => {\n        const compProxy: IRowContainerComp = {\n            setViewportHeight: setViewportHeight,\n            setRowCtrls: rowCtrls => setRowCtrls(rowCtrls),\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setContainerWidth: width => {\n                if (eContainer) {\n                    eContainer.style.width = width;\n                }\n            }\n        };\n\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        onCleanup(() => context.destroyBean(ctrl));\n\n        ctrl.setComp(compProxy, eContainer, eViewport);\n    });\n\n    const viewportStyle = createMemo(() => ({\n        height: viewportHeight()\n    }));\n\n    const buildContainer = () => (\n        <div\n            class={ containerClasses() }\n            ref={ eContainer }\n            role={ rowCtrls().length ? \"rowgroup\" : \"presentation\" }\n            >\n                <For each={rowCtrlsOrdered()}>{(rowCtrl, i) =>\n                    <RowComp rowCtrl={ rowCtrl } containerType={ containerType() }></RowComp>\n                }</For>\n        </div>\n    );\n\n    return (\n        <>\n            {\n                centerTemplate ?\n                <div class={ viewportClasses() } ref= { eViewport! } role=\"presentation\" style={ viewportStyle() }>\n                    { buildContainer() }\n                </div> :\n                buildContainer()\n            }\n        </>\n    );\n\n};\n\nexport default RowContainerComp;\n","import { GridBodyCtrl, IGridBodyComp, RowContainerName } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridHeaderComp from \"./header/gridHeaderComp\";\nimport RowContainerComp from \"./rows/rowContainerComp\";\n\nconst GridBodyComp = () => {\n\n    const {context, agStackComponentsRegistry, resizeObserverService} = useContext(BeansContext);\n\n    const [getRowAnimationClass, setRowAnimationClass] = createSignal<string>('');\n    const [getAriaColCount, setAriaColCount] = createSignal<number>(0);\n    const [getAriaRowCount, setAriaRowCount] = createSignal<number>(0);\n    const [getTopHeight, setTopHeight] = createSignal<number>(0);\n    const [getBottomHeight, setBottomHeight] = createSignal<number>(0);\n    const [getStickyTopHeight, setStickyTopHeight] = createSignal<string>('0px');\n    const [getStickyTopTop, setStickyTopTop] = createSignal<string>('0px');\n    const [getStickyTopWidth, setStickyTopWidth] = createSignal<string>('100%');\n    const [getTopDisplay, setTopDisplay] = createSignal<string>('');\n    const [getBottomDisplay, setBottomDisplay] = createSignal<string>('');\n    const [getBodyViewportWidth, setBodyViewportWidth] = createSignal<string>('');\n\n    const [getMovingCss, setMovingCss] = createSignal<string | null>(null);\n    const [getForceVerticalScrollClass, setForceVerticalScrollClass] = createSignal<string | null>(null);\n    const [getTopAndBottomOverflowY, setTopAndBottomOverflowY] = createSignal<'scroll' | 'hidden' | null>(null);\n    const [getCellSelectableCss, setCellSelectableCss] = createSignal<string | null>(null);\n\n    // we initialise layoutClass to 'ag-layout-normal', because if we don't, the comp will initially\n    // render with no width (as ag-layout-normal sets width to 0, which is needed for flex) which\n    // gives the grid a massive width, which then renders a massive amount of columns. this problem\n    // is due to React been async, for the non-async version (ie when not using React) this is not a\n    // problem as the UI will finish initialising before we set data.\n    const [getLayoutClass, setLayoutClass] = createSignal<string>('ag-layout-normal');\n\n    let eRoot: HTMLDivElement;\n    let eTop: HTMLDivElement;\n    let eStickyTop: HTMLDivElement;\n    let eBody: HTMLDivElement;\n    let eBodyViewport: HTMLDivElement;\n    let eBottom: HTMLDivElement;\n\n    const destroyFuncs: (() => void)[] = [];\n    onCleanup(() => {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount(() => {\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            onCleanup( ()=> context.destroyBean(comp) );\n            return comp;\n        };\n\n        eRoot.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n        eRoot.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n        eBody.appendChild(newComp('AG-FAKE-VERTICAL-SCROLL').getGui());\n\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: setAriaColCount,\n            setRowCount: setAriaRowCount,\n            setTopHeight,\n            setBottomHeight,\n            setStickyTopHeight,\n            setStickyTopTop,\n            setStickyTopWidth,\n            setTopDisplay,\n            setBottomDisplay,\n            setColumnMovingCss: setMovingCss,\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: (cssClass: string | null, flag: boolean) => setCellSelectableCss(flag ? cssClass : null),\n            setBodyViewportWidth: setBodyViewportWidth,\n\n            registerBodyViewportResizeListener: (listener: () => void) => {\n                const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport!, listener);\n                destroyFuncs.push(() => unsubscribeFromResize());\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        onCleanup(() => context.destroyBean(ctrl) );\n\n        // fixme - should not be in a timeout,\n        // was because we need GridHeaderComp to be created first\n        setTimeout(() => \n            ctrl.setComp(\n                compProxy,\n                eRoot,\n                eBodyViewport,\n                eTop,\n                eBottom,\n                eStickyTop\n            ), 0);\n    });\n\n    const getRootClasses = createMemo(() =>\n        classesList('ag-root','ag-unselectable', getMovingCss(), getLayoutClass())\n    );\n    const getBodyClasses = createMemo(() => \n        classesList('ag-body', getLayoutClass())\n    );\n    const getBodyViewportClasses = createMemo(() =>\n        classesList('ag-body-viewport', getRowAnimationClass(), getLayoutClass(), getForceVerticalScrollClass(), getCellSelectableCss())\n    );\n    const getTopClasses = createMemo(() =>\n        classesList('ag-floating-top', getCellSelectableCss())\n    );\n    const getStickyTopClasses = createMemo(() =>\n        classesList('ag-sticky-top', getCellSelectableCss())\n    );\n    const getBottomClasses = createMemo(() =>\n        classesList('ag-floating-bottom', getCellSelectableCss())\n    );\n\n    const getTopStyle : any = createMemo(() => ({\n       height: getTopHeight(),\n        'min-height': getTopHeight(),\n        display: getTopDisplay(),\n        'overflow-y': getTopAndBottomOverflowY()\n    }));\n\n    const getStickyTopStyle = createMemo(() => ({\n        height: getStickyTopHeight(),\n        top: getStickyTopTop(),\n        width: getStickyTopWidth()\n    }));\n\n    const getBottomStyle: any = createMemo(() => ({\n        height: getBottomHeight(),\n        'min-height': getBottomHeight(),\n        display: getBottomDisplay(),\n        'overflow-y': getTopAndBottomOverflowY()\n    }));\n\n    const getBodyViewportStyle = createMemo(() => ({\n        width: getBodyViewportWidth()\n    }));\n\n\n\n    return (\n        <div ref={ eRoot! } class={ getRootClasses() } role=\"treegrid\" aria-colcount={ getAriaColCount() } aria-rowcount={ getAriaRowCount() }>\n            <GridHeaderComp/>\n            <div ref={ eTop! } class={ getTopClasses() } role=\"presentation\" style={ getTopStyle() }>\n                <RowContainerComp name={ RowContainerName.TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.TOP_FULL_WIDTH } />\n            </div>\n            <div class={getBodyClasses()} ref={eBody!} role=\"presentation\">\n                <div ref={ eBodyViewport! } class={ getBodyViewportClasses() } role=\"presentation\" style={ getBodyViewportStyle() }>\n                    <RowContainerComp name={ RowContainerName.LEFT } />\n                    <RowContainerComp name={ RowContainerName.CENTER } />\n                    <RowContainerComp name={ RowContainerName.RIGHT } />\n                    <RowContainerComp name={ RowContainerName.FULL_WIDTH } />\n                </div>\n            </div>\n            <div ref={ eStickyTop! } class={ getStickyTopClasses() } role=\"presentation\" style={ getStickyTopStyle() }>\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_FULL_WIDTH } />\n            </div>\n            <div ref={ eBottom! } class={ getBottomClasses() } role=\"presentation\" style={ getBottomStyle() }>\n                <RowContainerComp name={ RowContainerName.BOTTOM_LEFT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_CENTER } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_RIGHT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_FULL_WIDTH } />\n            </div>\n        </div>\n    );\n};\n\nexport default GridBodyComp;\n","import { GridCtrl, ITabGuard, TabGuardClassNames, TabGuardCtrl } from '@ag-grid-community/core';\nimport { createSignal, JSX, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from \"./core/beansContext\";\n\ninterface TabGuardProps {\n    children: JSX.Element,\n    eFocusableElement: HTMLDivElement,\n    onTabKeyDown: (e: KeyboardEvent) => void,\n    gridCtrl: GridCtrl,\n    ref: (ref: TabGuardRef)=>void\n}\n\nexport interface TabGuardRef {\n    forceFocusOutOfContainer(): void;\n}\n\nconst TabGuardComp = (props: TabGuardProps)=> {\n\n    const { children, eFocusableElement, onTabKeyDown, gridCtrl } = props;\n    const [tabIndex, setTabIndex] = createSignal<number>();\n\n    let eTopGuard: HTMLDivElement;\n    let eBottomGuard: HTMLDivElement;\n    let ctrl: TabGuardCtrl;\n\n    const { context } = useContext(BeansContext);\n\n    onMount(() => {\n\n        const compProxy: ITabGuard = {\n            setTabIndex: value => value == null ? setTabIndex(undefined) : setTabIndex(parseInt(value, 10))\n        }\n\n        ctrl = context.createBean(new TabGuardCtrl({\n            comp: compProxy,\n            eTopGuard: eTopGuard,\n            eBottomGuard: eBottomGuard,\n            eFocusableElement: eFocusableElement,\n            \n            onTabKeyDown: onTabKeyDown,\n            focusInnerElement: fromBottom => gridCtrl.focusInnerElement(fromBottom)\n        }));\n\n        props.ref({\n            forceFocusOutOfContainer() {\n                ctrl.forceFocusOutOfContainer();\n            }\n        });\n    });\n\n    onCleanup( ()=> context.destroyBean(ctrl) );\n\n    return (\n        <>\n            <div class={ `${TabGuardClassNames.TAB_GUARD} ${TabGuardClassNames.TAB_GUARD_TOP}` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eTopGuard! }></div>\n\n            { children }\n\n            <div class={ `${TabGuardClassNames.TAB_GUARD} ${TabGuardClassNames.TAB_GUARD_BOTTOM}` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eBottomGuard! }></div>\n        </>\n    )\n};\n\nexport default TabGuardComp;","import {\n    Context,\n    FocusService,\n    GridCtrl,\n    IGridComp\n} from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridBodyComp from './gridBodyComp';\nimport TabGuardComp, { TabGuardRef } from './tabGuardComp';\n\nconst GridComp = (props: {context: Context, class?: string})=> {\n\n    const [rtlClass, setRtlClass] = createSignal<string>('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = createSignal<string>('');\n    const [layoutClass, setLayoutClass] = createSignal<string>('');\n    const [cursor, setCursor] = createSignal<string | null>(null);\n    const [userSelect, setUserSelect] = createSignal<string | null>(null);\n    const [initialised, setInitialised] = createSignal<boolean>(false);\n\n    const {context} = props;\n    const beans = context.getBean('beans');\n\n    let tabGuardRef: TabGuardRef;\n    const setTabGuardRef = (newRef: TabGuardRef)=> {\n        tabGuardRef = newRef;\n        tabGuardRef && tabGuardReady();\n    };\n\n    let eGui: HTMLDivElement;\n    let eBody: HTMLDivElement;\n    let gridCtrl: GridCtrl;\n\n    const onTabKeyDown = () => undefined;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    const tabGuardReady = ()=> {\n\n        const beansToDestroy: any[] = [];\n\n        const {agStackComponentsRegistry} = beans;\n\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls: HTMLDivElement[] = [];\n\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const el = headerDropZonesComp.getGui();\n            eGui.insertAdjacentElement('afterbegin', el);\n            additionalEls.push(el);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const el = sideBarComp.getGui();\n            const bottomTabGuard = eBody.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', el);\n                additionalEls.push(el);\n            }\n\n            beansToDestroy.push(sideBarComp);\n        }\n\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const el = statusBarComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(statusBarComp);\n        }\n\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const el = paginationComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(paginationComp);\n        }\n\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const el = watermarkComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(watermarkComp);\n        }\n\n        destroyFuncs.push( ()=> {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        });\n    };\n\n    onMount(() => {\n        gridCtrl = context.createBean(new GridCtrl());\n        destroyFuncs.push( ()=> context.destroyBean(gridCtrl) );\n\n        const compProxy: IGridComp = {\n            destroyGridUi:\n                () => {}, // do nothing, as framework users destroy grid by removing the comp\n            setRtlClass: setRtlClass,\n            forceFocusOutOfContainer: () => {\n                tabGuardRef && tabGuardRef.forceFocusOutOfContainer();\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                const els: HTMLElement[] = [];\n\n                const gridBodyCompEl = eGui.querySelector('.ag-root');\n                const sideBarEl = eGui.querySelector('.ag-side-bar:not(.ag-hidden)');\n\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl as HTMLElement);\n                }\n\n                if (sideBarEl) {\n                    els.push(sideBarEl as HTMLElement);\n                }\n\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n\n        gridCtrl.setComp(compProxy, eGui, eGui);\n        setInitialised(true);\n    });\n    \n    const cssClasses = createMemo( () => classesList('ag-root-wrapper', rtlClass(), keyboardFocusClass(), layoutClass(), props.class) );\n    const bodyCssClasses = createMemo( () => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass()));\n\n    const topStyle: any = createMemo( () => ({\n        userSelect: userSelect != null ? userSelect() : '',\n        WebkitUserSelect: userSelect != null ? userSelect() : '',\n        cursor: cursor != null ? cursor() : ''\n    }));\n\n    return (\n        <div ref={ eGui! } class={ cssClasses() } style={ topStyle() }>\n            <div class={ bodyCssClasses() } ref={ eBody! }>\n                { initialised() &&\n                    // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                    // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                    // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                    // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                    // hangs the UI)\n                    <BeansContext.Provider value={beans}>\n                        <TabGuardComp\n                            ref={ setTabGuardRef }\n                            eFocusableElement= { eGui! }\n                            onTabKeyDown={ onTabKeyDown }\n                            gridCtrl={ gridCtrl! }>\n                            <GridBodyComp/>\n                        </TabGuardComp>\n                    </BeansContext.Provider>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default GridComp;","import {ColumnApi, ComponentUtil, Context, CtrlsService, GridApi, GridCoreCreator, GridOptions, GridParams, Module} from '@ag-grid-community/core';\nimport {createEffect, createSignal, For, onCleanup, onMount} from \"solid-js\";\nimport {Portal} from 'solid-js/web';\nimport SolidCompWrapperFactory from './core/solidCompWrapperFactory';\nimport {SolidFrameworkOverrides} from './core/solidFrameworkOverrides';\nimport GridComp from './gridComp';\n\nexport interface AgGridSolidRef {\n    api: GridApi;\n    /** @deprecated v31 - The `columnApi` has been deprecated and all the methods are now present of the `api`. */\n    columnApi: ColumnApi;\n}\n\nexport interface AgGridSolidProps extends GridOptions {\n    gridOptions?: GridOptions;\n    ref?: AgGridSolidRef | ((ref: AgGridSolidRef) => void);\n    modules?: Module[];\n    class?: string;\n}\n\nexport interface PortalInfo {\n    mount: HTMLElement;\n    SolidClass: any;\n    props: any;\n    ref: (instance: any) => void;\n}\n\nexport interface PortalManager {\n    addPortal(info: PortalInfo): void;\n\n    removePortal(info: PortalInfo): void;\n}\n\nconst AgGridSolid = (props: AgGridSolidProps) => {\n    let eGui: HTMLDivElement;\n    let api: GridApi;\n\n    const [context, setContext] = createSignal<Context>();\n    const [getPortals, setPortals] = createSignal<PortalInfo[]>([]);\n\n    const destroyFuncs: (() => void)[] = [];\n    onCleanup(() => {\n        destroyFuncs.forEach(f => f());\n        destroyFuncs.length = 0;\n    });\n\n    // we check for property changes. to get things started, we take a copy\n    // of all the properties at the start, and then compare against this for\n    // changes.\n    const propsCopy: any = {};\n    Object.keys(props).forEach(key => propsCopy[key] = (props as any)[key]);\n\n    createEffect(() => {\n        const keys = Object.keys(props);\n        const changes: { [key: string]: { currentValue: any, previousValue: any } } = {};\n        let changesExist = false;\n\n        keys.forEach(key => {\n            // this line reads from the prop, which in turn makes\n            // this prop a dependency for the effect.\n            const currentValue = (props as any)[key];\n\n            const previousValue = propsCopy[key];\n            if (previousValue !== currentValue) {\n                changes[key] = {\n                    currentValue,\n                    previousValue\n                };\n                propsCopy[key] = currentValue;\n                changesExist = true;\n            }\n        });\n\n        if (changesExist) {\n            ComponentUtil.processOnChange(changes, api!);\n        }\n    });\n\n    onMount(() => {\n\n        const modules = props.modules || [];\n\n        const portalManager: PortalManager = {\n            addPortal: info => {\n                setPortals([...getPortals(), info]);\n            },\n            removePortal: info => {\n                setPortals(getPortals().filter(item => item != info));\n            }\n        };\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new SolidCompWrapperFactory(portalManager)\n            },\n            modules,\n            frameworkOverrides: new SolidFrameworkOverrides()\n        };\n\n        const gridOptions = ComponentUtil.combineAttributesAndGridOptions(props.gridOptions, props);\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                const refCallback = props.ref && (props.ref as (ref: AgGridSolidRef) => void);\n                if (refCallback) {\n                    const gridRef: AgGridSolidRef = {\n                        api: api!,\n                        columnApi: new ColumnApi(api!)\n                    };\n                    refCallback(gridRef);\n                }\n                destroyFuncs.push(() => api!.destroy());\n            });\n        };\n\n        const acceptChangesCallback = () => {\n            // todo, what goes here?\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        api = gridCoreCreator.create(eGui, gridOptions, createUiCallback, acceptChangesCallback, gridParams);\n    });\n\n    return (\n        <div ref={eGui!} style={{height: '100%'}}>\n            {context() &&\n                <GridComp class={props.class} context={context()!}></GridComp>\n            }\n            <For each={getPortals()}>{(info, i) =>\n                <Portal mount={info.mount}>\n                    <info.SolidClass {...info.props} ref={info.ref}/>\n                </Portal>\n            }</For>\n        </div>\n    );\n}\n\nexport default AgGridSolid;\n","import AgGridSolid from \"./grid/agGridSolid\";\nexport default AgGridSolid;\n\nexport * from \"./grid/agGridSolid\";\n\n// /* @refresh reload */\n// import { render } from 'solid-js/web';\n//\n// import './index.css';\n// import App from './sampleApp/App';\n//\n// render(() => <App />, document.getElementById('root') as HTMLElement);\n"],"names":["SolidCompWrapper","constructor","SolidCompClass","portalManager","init","props","eGui","document","createElement","className","portalInfo","mount","SolidClass","ref","instance","addPortal","destroy","removePortal","getGui","hasMethod","name","getFrameworkComponentInstance","callMethod","args","apply","addMethod","callback","SolidCompWrapperFactory","BaseComponentWrapper","createWrapper","SolidComponentClass","BeansContext","createContext","classesList","list","filtered","filter","s","join","CssClasses","classesMap","initialClasses","forEach","setClass","on","nothingHasChanged","res","toString","Object","keys","key","DetailCellRenderer","ctrlsFactory","context","gridOptionsService","resizeObserverService","clientSideRowModel","serverSideRowModel","useContext","getCssClasses","setCssClasses","createSignal","getGridCssClasses","setGridCssClasses","getDetailGridOptions","setDetailGridOptions","getDetailRowData","setDetailRowData","ctrl","eGuiRef","getCssClassesStr","createMemo","getGridCssClassesStr","refresh","onMount","template","console","warn","compProxy","addOrRemoveCssClass","addOrRemoveDetailGridCssClass","setDetailGrid","gridOptions","setRowData","rowData","getInstance","createBean","resizeObserverDestroyFunc","get","checkRowSizeFunc","clientHeight","updateRowHeightFunc","node","setRowHeight","onRowHeightChanged","setTimeout","observeResize","destroyBean","setRef","registerDetailWithMaster","api","columnApi","_el$","_tmpl$","_ref$","_$use","_$insert","_c$","_$memo","_$createComponent","AgGridSolid","_$mergeProps","class","_$effect","_$className","JsUserComp","p","promise","compDetails","newAgStackInstance","comp","resolveNow","x","gui","onCleanup","undefined","SolidUserComp","componentClass","refSet","params","UserComp","showSolidComp","details","componentFromFramework","showJsComp","r$","_c$2","_ref$2","GroupCellRenderer","eValueRef","eCheckboxRef","eExpandedRef","eContractedRef","getInnerCompDetails","setInnerCompDetails","getChildCount","setChildCount","getValue","setValue","getExpandedCssClasses","setExpandedCssClasses","getContractedCssClasses","setContractedCssClasses","getCheckboxCssClasses","setCheckboxCssClasses","setInnerRenderer","valueToDisplay","escapedValue","_","escapeString","count","setContractedDisplayed","displayed","setExpandedDisplayed","setCheckboxVisible","visible","GroupCellRendererCtrl","setAttribute","getCellAriaRole","getClassName","getExpandedClassName","getContractedClassName","getCheckboxClassName","isShowUserComp","isShowValue","_el$2","firstChild","_el$3","nextSibling","_el$4","_el$5","_el$6","_ref$3","_ref$4","_ref$5","_p$","_v$","_v$2","_v$3","_v$4","SolidFrameworkOverrides","VanillaFrameworkOverrides","frameworkComponents","agGroupCellRenderer","agGroupRowRenderer","agDetailCellRenderer","frameworkComponent","isFrameworkComponent","prototype","isJsComp","HeaderCellComp","getWidth","setWidth","getColId","setColId","getAriaSort","setAriaSort","getAriaDescription","setAriaDescription","getUserCompDetails","setUserCompDetails","eResize","eHeaderCompWrapper","userComp","cssClassManager","CssClassManager","width","description","sort","getUserCompInstance","setComp","selectAllGui","getSelectAllGui","insertAdjacentElement","setDragSource","style","_$style","_$setAttribute","HeaderFilterCellComp","getCssBodyClasses","setBodyCssClasses","getCssButtonWrapperClasses","setButtonWrapperCssClasses","getButtonWrapperAriaHidden","setButtonWrapperAriaHidden","eFloatingFilterBody","eButtonWrapper","eButtonShowMainFilter","alreadyResolved","userCompResolve","userCompPromise","AgPromise","resolve","value","prev","addOrRemoveBodyCssClass","setButtonWrapperDisplayed","setCompDetails","getFloatingFilterComp","setMenuIcon","eIcon","appendChild","getStyle","getCssClassesString","getBodyCssClassesString","getButtonWrapperCssClassesString","_v$5","HeaderGroupCellComp","getCssResizableClasses","setResizableCssClasses","getResizableAriaHidden","setResizableAriaHidden","getAriaExpanded","setAriaExpanded","setResizableDisplayed","expanded","createEffect","userCompDetails","getResizableClassName","_v$6","HeaderRowComp","getTransform","setTransform","getHeight","setHeight","getTop","setTop","getAriaRowIndex","setAriaRowIndex","getCellCtrls","setCellCtrls","setCellCtrlsMaintainOrder","next","isEnsureDomOrder","isPrintLayout","isDomLayout","prevMap","mapById","c","getInstanceId","nextMap","oldCtrlsWeAreKeeping","has","newCtrls","nextOrderMaintained","height","top","setHeaderCtrls","ctrls","transform","cssClasses","getHeaderRowClass","createCellJsx","cellCtrl","getType","HeaderRowType","COLUMN_GROUP","FLOATING_FILTER","For","each","children","i","HeaderRowContainerComp","getAriaHidden","setAriaHidden","getCenterContainerWidth","setCenterContainerWidth","getPinnedContainerWidth","setPinnedContainerWidth","getHeaderRowCtrls","setHeaderRowCtrls","pinnedLeft","pinned","pinnedRight","centre","destroyFuncs","f","length","setDisplayed","setCtrls","setCenterWidth","setViewportScrollLeft","left","scrollLeft","HeaderRowContainerCtrl","push","insertRowsJsx","eCenterContainerStyle","ePinnedStyle","_tmpl$2","_v$7","_v$8","GridHeaderComp","setHeightAndMinHeight","GridHeaderCtrl","PopupEditorComp","popupService","localeService","editDetails","eParentCell","useModelPopup","wrapper","PopupEditorWrapper","ePopupGui","positionParams","column","getColumn","rowNode","getRowNode","type","eventSource","ePopup","position","popupPosition","keepWithinBounds","positionCallback","positionPopupByComponent","bind","translate","getLocaleTextFunc","addPopupRes","addPopup","modal","eChild","closeOnEsc","closedCallback","onPopupEditorClosed","anchorToElement","ariaLabel","hideEditorPopup","hideFunc","Portal","ShowEditDetails","getCompDetails","inPopup","popup","eGuiFn","setPopupRef","setInlineRef","ToolsComp","CompWrapper","innerProps","createFn","includeSelection","checkboxSelectionComp","createSelectionCheckbox","setSelectionCheckboxId","getCheckboxId","includeDndSource","createDndSource","_c$3","includeRowDrag","createRowDragComp","ShowRenderDetails","showDetails","isNoCompDetails","valueForNoCellRenderer","bodyJsxFunc","_c$4","_c$5","_c$6","showTools","_c$7","showCellWrapper","setECellValue","cellInstanceId","checkCellEditorDeprecations","cellEditor","col","isPopup","msg","doOnce","getPopupPosition","CellComp","printLayout","editingRow","renderDetails","setRenderDetails","setEditDetails","renderCompVersion","renderCompVersionList","setRenderCompVersionList","userStyles","setUserStyles","tabIndex","setTabIndex","getTabIndex","colId","getColumnIdSanitised","selectionCheckboxId","setIncludeSelection","setIncludeRowDrag","setIncludeDndSource","forceWrapper","isForceWrapper","eCellWrapper","eCellValue","val","cellRenderer","setEditorRef","editingCancelledByUserComp","isCancelBeforeStart","stopEditing","focusCell","refAny","afterGuiAttached","setPopupEditorRef","setInlineEditorRef","styles","getFocusableElement","include","getCellEditor","getCellRenderer","getParentOfValue","force","isEditing","getRowCtrl","setInlineEditingCss","readyForRefresh","isJsCellRenderer","result","maintainOrderOnColumns","domOrder","instanceIdMap","Map","set","oldCellCtrls","newCellCtrls","newInstanceIdMap","tempMap","instanceId","RowComp","rowCtrl","containerType","getRowIndex","setRowIndex","getRowId","setRowId","getRowBusinessKey","setRowBusinessKey","getUserStyles","getFullWidthCompDetails","setFullWidthCompDetails","getDomOrder","setDomOrder","getInitialRowTop","getInitialTransform","fullWidthCompRef","setFullWidthRef","newRef","tryCount","trySetup","setupDetailRowAutoHeight","isAlive","showFullWidth","getFullWidthCellRenderer","unsetComp","getRowStyles","assign","isShowCells","isShowFullWidth","showCellsJsx","showFullWidthJsx","RowContainerComp","viewportHeight","setViewportHeight","rowCtrlsOrdered","setRowCtrlsOrdered","rowCtrls","setRowCtrls","getRowContainerTypeForName","eViewport","eContainer","RowContainerCtrl","getRowContainerCssClasses","viewportClasses","viewport","containerClasses","container","centerTemplate","RowContainerName","CENTER","TOP_CENTER","BOTTOM_CENTER","STICKY_TOP_CENTER","rowCtrlsOrderedCopy","oldRows","r","indexOf","newRows","setContainerWidth","viewportStyle","buildContainer","GridBodyComp","agStackComponentsRegistry","getRowAnimationClass","setRowAnimationClass","getAriaColCount","setAriaColCount","getAriaRowCount","setAriaRowCount","getTopHeight","setTopHeight","getBottomHeight","setBottomHeight","getStickyTopHeight","setStickyTopHeight","getStickyTopTop","setStickyTopTop","getStickyTopWidth","setStickyTopWidth","getTopDisplay","setTopDisplay","getBottomDisplay","setBottomDisplay","getBodyViewportWidth","setBodyViewportWidth","getMovingCss","setMovingCss","getForceVerticalScrollClass","setForceVerticalScrollClass","getTopAndBottomOverflowY","setTopAndBottomOverflowY","getCellSelectableCss","setCellSelectableCss","getLayoutClass","setLayoutClass","eRoot","eTop","eStickyTop","eBody","eBodyViewport","eBottom","newComp","tag","CompClass","getComponentClass","setRowAnimationCssOnBodyViewport","setColumnCount","setRowCount","setColumnMovingCss","updateLayoutClasses","setAlwaysVerticalScrollClass","setPinnedTopBottomOverflowY","cssClass","flag","registerBodyViewportResizeListener","listener","unsubscribeFromResize","GridBodyCtrl","getRootClasses","getBodyClasses","getBodyViewportClasses","getTopClasses","getStickyTopClasses","getBottomClasses","getTopStyle","display","getStickyTopStyle","getBottomStyle","getBodyViewportStyle","TOP_LEFT","TOP_RIGHT","TOP_FULL_WIDTH","LEFT","RIGHT","FULL_WIDTH","STICKY_TOP_LEFT","STICKY_TOP_RIGHT","STICKY_TOP_FULL_WIDTH","_ref$6","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_FULL_WIDTH","_v$9","_v$10","_v$11","_v$12","TabGuardComp","eFocusableElement","onTabKeyDown","gridCtrl","eTopGuard","eBottomGuard","parseInt","TabGuardCtrl","focusInnerElement","fromBottom","forceFocusOutOfContainer","TabGuardClassNames","TAB_GUARD","TAB_GUARD_TOP","TAB_GUARD_BOTTOM","GridComp","rtlClass","setRtlClass","keyboardFocusClass","setKeyboardFocusClass","layoutClass","cursor","setCursor","userSelect","setUserSelect","initialised","setInitialised","beans","getBean","tabGuardRef","setTabGuardRef","tabGuardReady","beansToDestroy","HeaderDropZonesClass","SideBarClass","StatusBarClass","WatermarkClass","PaginationClass","additionalEls","showDropZones","headerDropZonesComp","el","showSideBar","sideBarComp","bottomTabGuard","querySelector","showStatusBar","statusBarComp","paginationComp","showWatermark","watermarkComp","destroyBeans","parentElement","removeChild","GridCtrl","destroyGridUi","getFocusableContainers","els","gridBodyCompEl","sideBarEl","bodyCssClasses","topStyle","WebkitUserSelect","Provider","setContext","getPortals","setPortals","propsCopy","changes","changesExist","currentValue","previousValue","ComponentUtil","processOnChange","modules","info","item","gridParams","providedBeanInstances","frameworkComponentWrapper","frameworkOverrides","combineAttributesAndGridOptions","createUiCallback","ctrlsService","CtrlsService","NAME","whenReady","refCallback","gridRef","ColumnApi","acceptChangesCallback","gridCoreCreator","GridCoreCreator","create","setProperty"],"mappings":"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"}