import { Column, ColumnEventType, Component, Context, DragAndDropService, EventService, GridOptionsService, LoggerFactory } from "@ag-grid-community/core";
export interface BaseDropZonePanelParams {
    dragAndDropIcon: string;
    emptyMessage: string;
    title: string;
    icon: Element;
}
export interface BaseDropZonePanelBeans {
    gridOptionsService: GridOptionsService;
    eventService: EventService;
    context: Context;
    loggerFactory: LoggerFactory;
    dragAndDropService: DragAndDropService;
}
export declare type TDropZone = 'rowGroup' | 'pivot' | 'aggregation';
export declare abstract class BaseDropZonePanel extends Component {
    private horizontal;
    private dropZonePurpose;
    private colModel;
    private static STATE_NOT_DRAGGING;
    private static STATE_NEW_COLUMNS_IN;
    private static STATE_REARRANGE_COLUMNS;
    private state;
    private dropTarget;
    private potentialDndColumns;
    private guiDestroyFunctions;
    private params;
    private beans;
    private childColumnComponents;
    private insertIndex;
    private eColumnDropList;
    private positionableFeature;
    private resizeEnabled;
    protected abstract isColumnDroppable(column: Column): boolean;
    protected abstract updateColumns(columns: Column[]): void;
    protected abstract getExistingColumns(): Column[];
    protected abstract getIconName(): string;
    protected abstract getAriaLabel(): string;
    private readonly focusService;
    constructor(horizontal: boolean, dropZonePurpose: TDropZone);
    isHorizontal(): boolean;
    toggleResizable(resizable: boolean): void;
    setBeans(beans: BaseDropZonePanelBeans): void;
    protected destroy(): void;
    private destroyGui;
    init(params: BaseDropZonePanelParams): void;
    private handleKeyDown;
    private addElementClasses;
    private setupDropTarget;
    private isInterestedIn;
    private minimumAllowedNewInsertIndex;
    private checkInsertIndex;
    private getNewInsertIndex;
    private checkDragStartedBySelf;
    private onDragging;
    private onDragEnter;
    setColumnsVisible(columns: Column[] | null | undefined, visible: boolean, source?: ColumnEventType): void;
    protected isPotentialDndColumns(): boolean;
    private isRowGroupPanel;
    private onDragLeave;
    private onDragStop;
    private removeColumns;
    private addColumns;
    private rearrangeColumns;
    refreshGui(): void;
    private getFocusedItem;
    private restoreFocus;
    private getNonGhostColumns;
    private addColumnsToGui;
    private addAriaLabelsToComponents;
    private createColumnComponent;
    private addIconAndTitleToGui;
    private isExistingColumnsEmpty;
    private addEmptyMessageToGui;
    private addArrow;
}
